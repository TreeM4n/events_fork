namespace = mem_ancestors_grudge
###########
# 
# made by:
# tr33 & Malthus
#
###########
#TODO : neuer craftin situatio nsound evn_ove_engineering_bay
############################################################################################################
# Setup Events
############################################################################################################
# mem_ancestors_grudge.999  	|	test event / give access to various stuff
# mem_ancestors_grudge.998  	|	test all situation events. crafting
# mem_ancestors_grudge.997  	|	test all situation events. restoration
# mem_ancestors_grudge.1	  	|	nromal begin game setup (forge + arch nemesis)
############################################################################################################
# Story Events
############################################################################################################
# mem_ancestors_grudge.5	  	|	found the forge
## restoration situation
# mem_ancestors_grudge.10	  	|	situation event stage 1
# mem_ancestors_grudge.15	  	|	situation event stage 2
# mem_ancestors_grudge.16	  	|	situation event stage 2 Hive
# mem_ancestors_grudge.20	  	|	situation event stage 3
# mem_ancestors_grudge.25	  	|	situation event stage 4
# mem_ancestors_grudge.26	  	|	situation event stage 5 final
# mem_ancestors_grudge.30	  	|	hidden repaired/cleareed somethign
# mem_ancestors_grudge.35	  	|	on upgrade forge: make it an ecu world
# mem_ancestors_grudge.40	  	|	on upgrade forge: learn to forge
## crafting situation
# mem_ancestors_grudge.50	  	|	finished crafting situation/ randomize relic
# mem_ancestors_grudge.45	  	|	activated crafted relic
# mem_ancestors_grudge.55	  	|	on communication: arch nemesis 
# mem_ancestors_grudge.60	  	|	on country destroyed: we arch nemesis hidden
# mem_ancestors_grudge.75	  	|	on country destroyed: we arch nemesis 
# mem_ancestors_grudge.65	  	|	on country destroyed: others arch nemesis hidden
# mem_ancestors_grudge.70	  	|	on country destroyed: others arch nemesis notify us
# mem_ancestors_grudge.200	  	|	on planet conquered: someone stole forge hidden
# mem_ancestors_grudge.205	  	|	on planet conquered: someone stole forge notify
# mem_ancestors_grudge.210	  	|	on planet conquered: we got it back hidden
# mem_ancestors_grudge.215	  	|	on planet conquered: we got it back hidden notify
# mem_ancestors_grudge.220	  	|	on colony lost: its over planet got destroyed notify owner
# mem_ancestors_grudge.221	  	|	on colony lost: its over planet got destroyed
############################################################################################################
# random events for restoration situation
############################################################################################################
# mem_ancestors_grudge.100	  	|	mutants!
# mem_ancestors_grudge.105	  	|	random tech!
# mem_ancestors_grudge.110	  	|	shield gen found
# mem_ancestors_grudge.115	  	|	stasis pod
# mem_ancestors_grudge.120	  	|	bomb found
############################################################################################################
# digsite events
############################################################################################################
# mem_ancestors_grudge.300	  	|	digsite 1
# mem_ancestors_grudge.305	  	|	digsite 2
# mem_ancestors_grudge.310	  	|	digsite 3
# mem_ancestors_grudge.315	  	|	digsite 4 final
# mem_ancestors_grudge.320	  	|	digsite 1
# mem_ancestors_grudge.325	  	|	digsite 2
# mem_ancestors_grudge.330	  	|	digsite 3
# mem_ancestors_grudge.335	  	|	digsite 4 final
############################################################################################################
# random events for crafting situation
############################################################################################################
# mem_ancestors_grudge.400	  	|	alloys
# mem_ancestors_grudge.405	  	|	consumer goods
# mem_ancestors_grudge.410	  	|	failed but MA
# mem_ancestors_grudge.415	  	|	rick/cube relic
# mem_ancestors_grudge.420	  	|	accident/dead smith
# mem_ancestors_grudge.425	  	|	motes
# mem_ancestors_grudge.430	  	|	tech
# mem_ancestors_grudge.435	  	|	nanites
# mem_ancestors_grudge.440	  	|	rival sabotage
# mem_ancestors_grudge.445	  	|	diggy hole 
# mem_ancestors_grudge.446	  	|	diggy hole success 1
# mem_ancestors_grudge.447	  	|	diggy hole success 2
# mem_ancestors_grudge.448	  	|	diggy hole success 3
# mem_ancestors_grudge.449	  	|	diggy hole fail
# mem_ancestors_grudge.450		|	diggy hole hidden event to choose 446-449
namespace = mem_ancestors_grudge
country_event = {
	id = mem_ancestors_grudge.999
	title = WEIRD
	desc = WEIRD
	picture = GFX_evt_ancient_alien_temple
	show_sound = event_collapsing_ruins
	location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	immediate = {
		random_owned_planet = {
			limit = {
				has_planet_flag = mem_ancestors_grudge_planet
			}
			save_event_target_as = mem_ancestors_grudge_planet
		}
	}
	option = {
		name = WEIRD
		event_target:mem_ancestors_grudge_planet = {
			add_building = building_mem_ancestors_grudge_forge_0
		}
	}
	option = {
		name = WEIRD
		start_situation = {
			type = situation_mem_ancestors_grudge_forge_repairs
			target = event_target:mem_ancestors_grudge_planet
		}
		random_situation = {
			limit = {
				is_situation_type = situation_mem_ancestors_grudge_forge_repairs
			}
			add_situation_progress = 20000
		}
	}
	option = {
		name = WEIRD
		start_situation = {
			type = situation_mem_ancestors_grudge_crafting
			target = event_target:mem_ancestors_grudge_planet
		}
		random_situation = {
			limit = {
				is_situation_type = situation_mem_ancestors_grudge_crafting
			}
			add_situation_progress = 20000
		}
	}
	option = {
		name = WEIRD
		start_situation = {
			type = situation_mem_ancestors_grudge_crafting
			target = event_target:mem_ancestors_grudge_planet
		}
	}
	option = {
		name = WEIRD
		add_relic = r_mem_ancestors_grudge_pauldron
		set_variable = {
			which = mem_ancestors_grudge_rune_intensity
			value = 4
		}
		set_variable = {
			which = mem_ancestors_grudge_situation_rarity
			value = 7
		}
	}
	option = {
		name = WEIRD
		add_relic = r_mem_ancestors_grudge_ring
		set_variable = {
			which = mem_ancestors_grudge_rune_intensity
			value = 4
		}
		set_variable = {
			which = mem_ancestors_grudge_smithing_quality_rolled
			value = 7
		}
	}
	option = {
		name = WEIRD
		add_relic = r_mem_ancestors_grudge_sword
		set_variable = {
			which = mem_ancestors_grudge_rune_intensity
			value = 4
		}
		set_variable = {
			which = mem_ancestors_grudge_smithing_quality_rolled
			value = 7
		}
	}
	option = {
		name = WEIRD2
		if = {
			limit = {
				has_relic = r_mem_ancestors_grudge_pauldron
			}
			create_leader = {
				class = official
				species = root.owner_main_species
			}
		}
		else_if = {
			limit = {
				has_relic = r_mem_ancestors_grudge_sword
			}
			create_leader = {
				class = commander
				species = root.owner_main_species
			}
		}
		else_if = {
			limit = {
				has_relic = r_mem_ancestors_grudge_ring
			}
			create_leader = {
				class = scientist
				species = root.owner_main_species
			}
		}
		last_created_leader = {
			set_age = 0
			add_skill = 2
			#set_name = rand
			mem_ancestors_grudge_trait_effect = yes
		}
	}
	option = {
		name = WEIRD
		add_relic = r_mem_ancestors_grudge_anvil
		set_variable = {
			which = mem_ancestors_grudge_activated_relics_counter
			value = 1
		}
		every_owned_planet = {
			set_planetary_ascension_tier = +1
		}
	}
	option = {
		name = WEIRD
		add_relic = r_mem_ancestors_grudge_modern_art
		set_variable = {
			which = mem_ancestors_grudge_activated_relics_counter
			value = 1
		}
	}
	option = {
		name = WEIRD
		add_resource = {
			unity = 1000
			mult = this.modifier:mem_ancestors_grudge_artifact_power_produces_mult
		}
	}
	option = {
		name = WEIRD
		add_resource = {
			unity = 1000
			mult = this.modifier:mem_ancestors_grudge_rune_power_produces_mult
		}
	}
	option = {
		name = WEIRD
		add_resource = {
			unity = 1000
			mult = this.value:mem_ancestors_grudge_situation_rarity
		}
	}
	# option = {
	# 	name = WEIRD
	# 	capital_scope = {
	# 		solar_system = {
	# 			spawn_system = {
	# 				initializer = mem_ancestors_grudge_system_lost_colony_1
	# 			}
	# 		}
	# 	}
	# }
	# option = {
	# 	name = WEIRD
	# 	random_playable_country = {
	# 		save_event_target_as = mem_this
	# 	}
	# 	country_event = {
	# 		id = mem_ancestors_grudge.205
	# 		scopes = {
	# 			from = event_target:mem_this
	# 		}
	# 	}
	# }
	option = {
		name = WEIRD
		create_message = {
			type = MEM_ANCESTORS_GRUDGE_GOT_RELIC_1
			days = 60
		}
		create_message = {
			type = MEM_ANCESTORS_GRUDGE_GOT_RELIC_2
			days = 60
		}
		create_message = {
			type = MEM_ANCESTORS_GRUDGE_GOT_RELIC_3
			days = 60
		}
	}
	option = {
		name = WEIRD
		add_modifier = {
			modifier = mem_ancestors_grudge_lost_forge_beat_sworn_enemy
			mult = 3.5
		}
	}
	option = {
		name = WEIRD
		give_technology = {
			tech = tech_mem_ancestors_grudge_robot_traits
		}
		give_technology = {
			tech = tech_mem_ancestors_grudge_robot_factory
		}
		give_technology = {
			tech = tech_mem_ancestors_grudge_dragon_lure
		}
	}
	option = {
		name = WEIRD
		create_fleet = {
			name = "NAME_Dragonling"
			settings = {
				can_upgrade = no
				#can_change_composition = no
				#can_change_leader = no
				uses_naval_capacity = no
				spawn_debris = no
			}
			effect = {
				set_owner = root.owner
				create_ship_design = {
					design = mem_ancestors_grudge_dragonling
				}
				create_ship = {
					design = last_created_design
					name = "NAME_Dragonling"
					prefix = no
					upgradable = no
				}
				set_location = root.capital_scope
			}
		}
		create_fleet = {
			name = "Hoarding Dragon"
			settings = {
				can_upgrade = no
				#can_change_composition = no
				#can_change_leader = no
				uses_naval_capacity = no
				spawn_debris = no
			}
			effect = {
				set_owner = root.owner
				create_ship_design = {
					design = mem_ancestors_grudge_dragon
				}
				create_ship = {
					design = last_created_design
					name = "NAME_voidlure_mem_ancestors_grudge_dragon"
					prefix = no
					upgradable = no
				}
				set_location = root.capital_scope
			}
		}
	}
	option = {
		name = WEIRD
		create_country = {
			name = "Grand Dragon"
			type = guardian_dragon
			flag = {
				icon = {
					category = "spherical"
					file = "flag_spherical_6.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = {
					"dark_blue"
					"dark_blue"
					"null"
					"null"
				}
			}
			effect = {
				set_faction_hostility = {
					target = root.owner
					set_hostile = yes
					set_neutral = no
					set_friendly = no
				}
				save_global_event_target_as = mem_ancestors_grudge_dragon_country
				set_country_flag = mem_ancestors_grudge_dragon_country
				############## this should not break things but rather disable the ether drake on action killed event
				set_country_flag = here_be_the_dragon
				every_playable_country = {
					establish_communications_no_message = event_target:mem_ancestors_grudge_dragon_country
				}
				create_fleet = {
					name = "Hoarding Dragon"
					settings = {
						spawn_debris = no
						is_boss = yes
					}
					effect = {
						set_owner = event_target:mem_ancestors_grudge_dragon_country
						create_ship = {
							name = ""
							design = "mem_ancestors_grudge_dragon"
							effect = {
								set_ship_flag = mem_ancestors_grudge_dragon_ship
								save_global_event_target_as = mem_ancestors_grudge_dragon_ship
								set_disabled = no
							}
						}
						save_global_event_target_as = mem_ancestors_grudge_dragon_fleet
						set_location = {
							target = root.capital_scope
							distance = 10
							angle = 90
							direction = in_system
						}
						set_fleet_stance = passive
						set_aggro_range_measure_from = self
						set_aggro_range = 350
						queue_actions = {
							repeat = {
								find_closest_planet = {
									trigger = {
										id = mem_ancestors_grudge.home.1
										is_star = yes
									}
									found_planet = {
										move_to = this
										orbit_planet = this
										wait = {
											duration = 30
											random = 20
										}
									}
								}
								find_closest_planet = {
									trigger = {
										id = mem_ancestors_grudge.home.2
										is_star = no
										NOT = {
											is_same_value = root.capital_scope
										}
									}
									found_planet = {
										move_to = this
										orbit_planet = this
										wait = {
											duration = 30
											random = 20
										}
									}
								}
								find_closest_planet = {
									trigger = {
										id = mem_ancestors_grudge.home.3
										is_same_value = root.capital_scope
									}
									found_planet = {
										move_to = this
										orbit_planet = this
										wait = {
											duration = 30
											random = 20
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.26.b
		trigger = {
			owner = {
				OR = {
					has_authority = auth_machine_intelligence
					has_origin = origin_mem_ancestors_grudge_machines
				}
			}
		}
		owner = {
			give_technology = {
				tech = tech_mem_ancestors_grudge_robot_traits
			}
		}
		hidden_effect = {
			capital_scope = {
				every_owned_pop = {
					limit = {
						is_same_species = root
					}
					modify_species = {
						species = this
						add_trait = trait_mem_ancestors_grudge_archaeotech_excellence
					}
					#wipe_pop_ethos = yes
					#make_intelligent = yes
					#make_unleashed_messenger = yes
					#pop_change_ethic = ethic_pacifist
					set_timed_pop_flag = {
						flag = changed_pop
						days = 2
					}
				}
				random_owned_pop = {
					limit = {
						has_pop_flag = changed_pop
					}
					root = {
						change_dominant_species = {
							species = prev
						}
					}
				}
			}
		}
	}
}

# all events for crafting
situation_event = {
	hide_window = yes
	is_triggered_only = yes
	id = mem_ancestors_grudge.998
	immediate = {
		situation_event = {
			id = mem_ancestors_grudge.400
		}
		situation_event = {
			id = mem_ancestors_grudge.405
		}
		situation_event = {
			id = mem_ancestors_grudge.410
		}
		situation_event = {
			id = mem_ancestors_grudge.415
		}
		situation_event = {
			id = mem_ancestors_grudge.420
		}
		situation_event = {
			id = mem_ancestors_grudge.425
		}
		situation_event = {
			id = mem_ancestors_grudge.430
		}
		situation_event = {
			id = mem_ancestors_grudge.435
		}
		situation_event = {
			id = mem_ancestors_grudge.440
		}
		situation_event = {
			id = mem_ancestors_grudge.445
		}
		situation_event = {
			id = mem_ancestors_grudge.51
		}
	}
}

# all events for restoring
situation_event = {
	hide_window = yes
	is_triggered_only = yes
	id = mem_ancestors_grudge.997
	immediate = {
		situation_event = {
			id = mem_ancestors_grudge.100
		}
		situation_event = {
			id = mem_ancestors_grudge.105
		}
		situation_event = {
			id = mem_ancestors_grudge.110
		}
		situation_event = {
			id = mem_ancestors_grudge.115
		}
		situation_event = {
			id = mem_ancestors_grudge.120
		}
	}
}

# destroy situation
situation_event = {
	hide_window = yes
	is_triggered_only = yes
	id = mem_ancestors_grudge.996
	immediate = {
		destroy_situation = this
	}
}

# restore modification
country_event = {
	hide_window = yes
	is_triggered_only = yes
	id = mem_ancestors_grudge.995
	immediate = {
		owner_main_species = {
			change_species_characteristics = {
				can_be_modified = yes
			}
		}
	}
}

# setup 
# fired at gamestart to setup the habitat
country_event = {
	id = mem_ancestors_grudge.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_mem_runesmith = yes
	}
	immediate = {
		save_event_target_as = origin_mem_ancestors_grudge
		if = {
			limit = {
				has_authority = auth_machine_intelligence
			}
			ruler = {
				set_variable = {
					which = mem_ancestors_grudge_activated_rune_ruler_strength
					value = 0
				}
				if = {
					limit = {
						NOR = {
							has_trait = leader_trait_legendary_mem_ancestors_grudge_machine_nexus_one
							has_trait = leader_trait_legendary_mem_ancestors_grudge_machine_nexus_two
							has_trait = leader_trait_legendary_mem_ancestors_grudge_machine_nexus_three
							has_trait = leader_trait_legendary_mem_ancestors_grudge_machine_nexus_four
						}
					}
					random_list = {
						1 = {
							add_trait = leader_trait_legendary_mem_ancestors_grudge_machine_nexus_one
						}
						1 = {
							add_trait = leader_trait_legendary_mem_ancestors_grudge_machine_nexus_two
						}
						1 = {
							add_trait = leader_trait_legendary_mem_ancestors_grudge_machine_nexus_three
						}
						1 = {
							add_trait = leader_trait_legendary_mem_ancestors_grudge_machine_nexus_four
						}
					}
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_mem_ancestors_grudge_machines
			}
			add_modifier = {
				modifier = mem_ancestors_grudge_unknown_design
			}
			owner_main_species = {
				change_species_characteristics = {
					can_be_modified = no
					#can_change_leader = yes
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_mem_ancestors_grudge_hive
			}
			capital_scope = {
				add_building = building_mem_ancestors_grudge_hoarder_depot
			}
		}
		capital_scope = {
			while = {
				count = 6
				random_owned_pop = {
					#save_event_target_as = origin_mem_ancestors_grudge_species
					kill_pop = yes
				}
				#
			}
			while = {
				count = 1
				add_deposit = d_mem_ancestors_grudge_bomb_crater
				add_deposit = d_mem_ancestors_grudge_ruined_district
			}
			while = {
				count = 3
				add_deposit = d_mem_ancestors_grudge_city_ruins
			}
			if = {
				limit = {
					owner = {
						is_catalytic_empire = yes
					}
				}
				add_modifier = {
					modifier = lush_planet
				}
			}
			else = {
				add_modifier = {
					modifier = mineral_rich
				}
			}
			# solar_system = {
			# 	random_system_planet = {
			# 		limit = {
			# 			NOT = {
			# 				is_same_value = prevprev
			# 			}
			# 		}
			# 		change_pc = pc_relic
			# 		set_planet_flag = mem_ancestors_grudge_planet
			# 	}
			# }
		}
		random_planet_within_border = {
			limit = {
				has_planet_flag = mem_ancestors_grudge_planet
			}
			start_colony = {
				owner = root
				species = research_station.
				#ethos = root.ethos
			}
			set_variable = {
				which = mem_ancestors_grudge_relicforge_extrajobs
				value = 0
			}
			add_colony_progress = 0.8
			add_planet_devastation = 100
			# create_colony = {
			# 	owner = root
			# 	species = root.species
			# 	#	ethos = random
			# }
			add_modifier = {
				modifier = mem_ancestors_grudge_city_planet
			}
			add_modifier = {
				modifier = low_gravity
			}
			add_deposit = d_mem_ancestors_grudge_boulder
			while = {
				count = 8
				add_building = building_mem_ancestors_grudge_ruins
				#ruin_building = building_mem_ancestors_grudge_ruins
			}
			while = {
				count = 3
				add_deposit = d_mem_ancestors_grudge_bomb_crater
				add_deposit = d_mem_ancestors_grudge_ruined_district
			}
			while = {
				count = 5
				add_deposit = d_mem_ancestors_grudge_city_ruins
			}
			while = {
				count = 2
				create_pop = {
					species = owner_main_species
				}
			}
		}
		country_event = {
			id = mem_ancestors_grudge.5
			days = 360
		}
	}
}

# setup 
# fired at gamestart to setup the habitat
event = {
	id = mem_ancestors_grudge.2
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = yes
	trigger = {
		any_playable_country = {
			is_mem_runesmith = yes
		}
	}
	immediate = {
		random_system = {
			limit = {
				NOR = {
					has_star_flag = empire_cluster
					has_star_flag = empire_home_system
					exists = owner
					any_neighbor_system = {
						has_star_flag = empire_cluster
						has_star_flag = empire_home_system
						exists = owner
					}
				}
			}
			spawn_system = {
				initializer = mem_ancestors_grudge_system_lost_colony_1
				#min_jumps = 10
				hyperlane = yes
				#min_distance = 200
			}
			last_created_system = {
				save_event_target_as = mem_ancestors_grudge_system_lost_colony_1
			}
		}
		################### create enemy #######################
		if = {
			limit = {
				exists = event_target:mem_ancestors_grudge_system_lost_colony_1
			}
			create_species = {
				name = "Vazuran"
				plural = "Vazurans"
				class = ART
				portrait = art17
				traits = {
					trait = trait_intelligent
					trait = trait_natural_physicists
					trait = trait_venerable
					trait = trait_slow_breeders
					trait = trait_weak
				}
				extra_trait_points = 3
			}
			create_country = {
				name = "origin_mem_ancestors_grudge_advanced_start_name"
				name_list = "ART2"
				type = default
				# type = mem_vazurans #TODO later
				origin = "origin_mem_ancestors_grudge_advanced_start"
				ignore_initial_colony_error = yes
				day_zero_contact = no
				authority = auth_dictatorial
				civics = {
					civic = civic_warrior_culture
					civic = civic_nationalistic_zeal
				}
				species = last_created_species
				ethos = {
					ethic = ethic_xenophobe
					ethic = ethic_fanatic_militarist
				}
				flag = {
					icon = {
						category = "domination"
						file = "domination_21.dds"
					}
					background = {
						category = "backgrounds"
						file = "00_solid.dds"
					}
					colors = {
						"black"
						"dark_purple"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				set_name = "origin_mem_ancestors_grudge_advanced_start_name"
				add_resource = {
					unity = 10000
					minerals = 30000
					influence = 200
					alloys = 5000
					food = 10000
					consumer_goods = 5000
					energy = 20000
				}
				force_add_civic = civic_barbaric_despoilers
				set_country_flag = mem_ancestors_grudge_system_lost_colony_country
				save_global_event_target_as = mem_ancestors_grudge_system_lost_colony_country
				#save_event_target_as = mem_ancestors_grudge_system_lost_colony_country
				add_modifier = {
					modifier = mem_ancestors_grudge_ai_cheat
					days = 3600
				}
				# create leadeer idfk
				# country_event = {
				# 	id = mem_ancestors_grudge.3
				# }
				while = {
					count = 10
					add_random_research_option = {
						#category = random
						#area = RANDOM
						tier = 1
						add_progress = 10
						ignore_prereqs = no
						ignore_rare = yes
						only_rare = no
						ignore_insight = yes
						fail_effects = {
							add_monthly_resource_mult = {
								resource = engineering_research
								value = 3
							}
						}
					}
				}
			}
		}
		last_created_system = {
			create_starbase = {
				size = starbase_starport
				owner = event_target:mem_ancestors_grudge_system_lost_colony_country
				module = shipyard
				module = shipyard
				building = crew_quarters
			}
			every_system_planet = {
				limit = {
					habitable_planet = yes
				}
				create_colony = {
					owner = event_target:mem_ancestors_grudge_system_lost_colony_country
				}
				while = {
					count = 35
					create_pop = {
						species = event_target:mem_ancestors_grudge_system_lost_colony_country.owner_main_species
					}
				}
				while = {
					count = 2
					add_district = district_mining
					add_district = district_farming
					add_district = district_generator
					add_district = district_industrial
					add_district = district_city
				}
				add_building = building_holo_theatres
				#set_owner = event_target:mem_ancestors_grudge_system_lost_colony_country
			}
		}
	}
}

country_event = {
	id = mem_ancestors_grudge.3
	title = WEIRD
	desc = WEIRD
	#hide_window = yes
	picture = GFX_evt_city_ruins
	is_triggered_only = yes
	trigger = {
		has_origin = origin_mem_ancestors_grudge_advanced_start
	}
	immediate = {
	}
	option = {
		# bcause im too stupid for assign as ruler
		name = WEIRD
		ruler = {
			change_leader_class = commander
			set_gender = male
			set_name = "NAME_Grand_Admiral_Zrawn"
			add_trait = leader_trait_mem_ancestors_grudge_thrawn
			change_leader_portrait = mem_ancestors_grudge_zrawn
			set_immortal = yes
			add_trait = leader_trait_mem_ancestors_grudge_thrawn
		}
		set_ruler_title_male = "Grand Admiral"
		set_ruler_title_female = "Grand Admiral"
	}
	option = {
		name = WEIRD
		allow = {
			always = no
		}
		create_species = {
			name = "Vazuran"
			class = PARAGON
			portrait = mem_ancestors_grudge_zrawn
			namelist = "PRT1"
			traits = {
				trait = trait_decadent
				trait = trait_talented
				trait = trait_thrifty
				#trait = trait_weak
				#trait = trait_plantoid_budding
			}
			effect = {
				save_event_target_as = mem_ancestors_grudge_zrawn_species
			}
		}
		create_leader = {
			name = "NAME_Grand_Admiral_Zrawn"
			species = event_target:mem_ancestors_grudge_zrawn_species
			class = commander
			skill = 7
			set_age = 62
			gender = male			# Optional, default = random.
			event_leader = yes
			immortal = yes
			#randomize_traits = yes
			# custom_description = "mem_ancestors_grudge_zrawn_desc"
			# custom_catch_phrase = "mem_ancestors_grudge_zrawn_phrase"
			effect = {
				set_owner = root
				set_name = "NAME_Grand_Admiral_Zrawn"
				add_trait = leader_trait_mem_ancestors_grudge_thrawn
				set_council_position = councilor_ruler_dictatorial
				set_council_position = councilor_ruler_imperial
				#save_event_target_as = mem_ancestors_grudge_zrawn
			}
		}
	}
}

# found the forge
country_event = {
	id = mem_ancestors_grudge.5
	title = mem_ancestors_grudge.5.name
	desc = {
		trigger = {
			OR = {
				gets_mem_ancestors_grudge_robot_text = yes
				gets_mem_ancestors_grudge_machine_text = yes
			}
		}
		text = mem_ancestors_grudge.5.desc_robots
	}
	desc = {
		trigger = {
			gets_mem_ancestors_grudge_hive_text = yes
		}
		text = mem_ancestors_grudge.5.desc_hive
	}
	desc = {
		trigger = {
			gets_mem_ancestors_grudge_organic_text = yes
		}
		text = mem_ancestors_grudge.5.desc
	}
	picture = GFX_evt_relic_world
	show_sound = event_collapsing_ruins
	location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	immediate = {
		random_owned_planet = {
			limit = {
				has_planet_flag = mem_ancestors_grudge_planet
			}
			save_event_target_as = mem_ancestors_grudge_planet
		}
	}
	option = {
		name = mem_ancestors_grudge.5.a
		trigger = {
			gets_mem_ancestors_grudge_hive_text = no
		}
	}
	option = {
		name = INTERESTING
		trigger = {
			gets_mem_ancestors_grudge_hive_text = yes
		}
	}
	after = {
		start_situation = {
			type = situation_mem_ancestors_grudge_forge_repairs
			target = event_target:mem_ancestors_grudge_planet
		}
		event_target:mem_ancestors_grudge_planet = {
			remove_building = building_mem_ancestors_grudge_ruins
			add_building = building_mem_ancestors_grudge_forge_0
		}
	}
}

# learned to repair it
situation_event = {
	id = mem_ancestors_grudge.10
	title = mem_ancestors_grudge.10.name
	desc = {
		trigger = {
			owner = {
				OR = {
					gets_mem_ancestors_grudge_robot_text = yes
					gets_mem_ancestors_grudge_machine_text = yes
				}
			}
		}
		text = mem_ancestors_grudge.10.desc_robots
	}
	desc = {
		trigger = {
			owner = {
				gets_mem_ancestors_grudge_hive_text = yes
			}
		}
		text = mem_ancestors_grudge.10.desc_hive
	}
	desc = {
		trigger = {
			owner = {
				gets_mem_ancestors_grudge_organic_text = yes
			}
		}
		text = mem_ancestors_grudge.10.desc
	}
	picture = GFX_evt_relic_world_building
	show_sound = event_energy_field
	location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	situation = this
	immediate = {
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mem_ancestors_grudge_planet
				}
				save_event_target_as = mem_ancestors_grudge_planet
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.10.a
		if = {
			limit = {
				host_has_dlc = "Ancient Relics Story Pack"
			}
			owner = {
				add_research_option = tech_archaeostudies
				hidden_effect = {
					add_tech_progress = {
						tech = tech_archaeostudies
						progress = 0.7
					}
				}
			}
		}
		custom_tooltip = mem_ancestors_grudge_unlocks_forge_upgrade_tt
		hidden_effect = {
			event_target:mem_ancestors_grudge_planet = {
				set_planet_flag = building_mem_ancestors_grudge_forge_1
			}
			if = {
				limit = {
					owner = {
						is_ai = yes
					}
				}
				target = {
					remove_building = building_mem_ancestors_grudge_forge_0
					add_building = building_mem_ancestors_grudge_forge_1
				}
			}
		}
	}
}

# learned to repair it + how to forge
situation_event = {
	id = mem_ancestors_grudge.15
	title = mem_ancestors_grudge.15.name
	desc = mem_ancestors_grudge.15.desc
	picture = GFX_evt_riftworld_archsite_crater
	show_sound = event_collapsing_ruins
	location = target
	situation = this
	is_triggered_only = yes
	immediate = {
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mem_ancestors_grudge_planet
				}
				save_event_target_as = mem_ancestors_grudge_planet
			}
		}
	}
	option = {
		name = INTERESTING
		target = {
			create_archaeological_site = mem_ancestors_grudge_anvil_site
		}
		# owner = {
		# 	set_country_flag = mem_ancestors_grudge_anvil_site
		# }
		custom_tooltip = mem_ancestors_grudge_unlocks_forge_upgrade_tt
		hidden_effect = {
			target = {
				set_planet_flag = building_mem_ancestors_grudge_forge_2
			}
			if = {
				limit = {
					owner = {
						is_ai = yes
					}
				}
				target = {
					remove_building = building_mem_ancestors_grudge_forge_1
					add_building = building_mem_ancestors_grudge_forge_2
				}
				owner = {
					country_event = {
						id = mem_ancestors_grudge.40
					}
				}
			}
		}
	}
}

# stage 3 for hive
situation_event = {
	id = mem_ancestors_grudge.16
	title = mem_ancestors_grudge.16.name
	desc = mem_ancestors_grudge.16.desc
	picture = GFX_evt_riftworld_archsite_crater
	show_sound = event_collapsing_ruins
	location = target
	situation = this
	is_triggered_only = yes
	immediate = {
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mem_ancestors_grudge_planet
				}
				save_event_target_as = mem_ancestors_grudge_planet
			}
		}
	}
	option = {
		name = INTERESTING
		target = {
			create_archaeological_site = mem_ancestors_grudge_anvil_site_hive
		}
		custom_tooltip = mem_ancestors_grudge_unlocks_forge_upgrade_tt
		hidden_effect = {
			target = {
				set_planet_flag = building_mem_ancestors_grudge_forge_2
			}
			if = {
				limit = {
					owner = {
						is_ai = yes
					}
				}
				target = {
					remove_building = building_mem_ancestors_grudge_forge_1
					add_building = building_mem_ancestors_grudge_forge_2
				}
				owner = {
					country_event = {
						id = mem_ancestors_grudge.40
					}
				}
			}
		}
	}
}

#  lets upgrade this even further
situation_event = {
	id = mem_ancestors_grudge.20
	title = mem_ancestors_grudge.20.name
	desc = {
		trigger = {
			owner = {
				gets_mem_ancestors_grudge_hive_text = yes
			}
		}
		text = mem_ancestors_grudge.20.desc_hive
	}
	desc = {
		trigger = {
			owner = {
				gets_mem_ancestors_grudge_hive_text = no
			}
		}
		text = mem_ancestors_grudge.20.desc
	}
	picture = GFX_evt_city_ruins
	show_sound = event_collapsing_ruins
	location = target
	situation = this
	is_triggered_only = yes
	immediate = {
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mem_ancestors_grudge_planet
				}
				save_event_target_as = mem_ancestors_grudge_planet
			}
		}
	}
	option = {
		name = FASCINATING
		# owner = {
		# 	start_situation = {
		# 		type = situation_mem_ancestors_grudge_crafting
		# 	}
		# }
		owner = {
			add_resource = {
				volatile_motes = 100
				#exotic_gases = 50
				rare_crystals = 100
			}
		}
		custom_tooltip = mem_ancestors_grudge_unlocks_forge_upgrade_tt
		hidden_effect = {
			target = {
				set_planet_flag = building_mem_ancestors_grudge_forge_3
			}
			if = {
				limit = {
					owner = {
						is_ai = yes
					}
				}
				target = {
					remove_building = building_mem_ancestors_grudge_forge_2
					add_building = building_mem_ancestors_grudge_forge_3
					planet_event = {
						id = mem_ancestors_grudge.35
					}
				}
			}
		}
	}
}

#  to perfection and beyond
situation_event = {
	id = mem_ancestors_grudge.25
	title = mem_ancestors_grudge.25.name
	desc = {
		trigger = {
			owner = {
				OR = {
					gets_mem_ancestors_grudge_robot_text = yes
					gets_mem_ancestors_grudge_machine_text = yes
				}
			}
		}
		text = mem_ancestors_grudge.25.desc_robots
	}
	desc = {
		trigger = {
			owner = {
				gets_mem_ancestors_grudge_hive_text = yes
			}
		}
		text = mem_ancestors_grudge.25.desc_hive
	}
	desc = {
		trigger = {
			owner = {
				gets_mem_ancestors_grudge_organic_text = yes
			}
		}
		text = mem_ancestors_grudge.25.desc
	}
	picture = GFX_evt_city_planet_2
	show_sound = event_celebration
	location = target
	situation = this
	is_triggered_only = yes
	immediate = {
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mem_ancestors_grudge_planet
				}
				save_event_target_as = mem_ancestors_grudge_planet
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.25.a
		owner = {
			give_technology = {
				tech = tech_repeatable_mem_ancestors_grudge
			}
		}
		custom_tooltip = mem_ancestors_grudge_unlocks_forge_upgrade_tt
		hidden_effect = {
			target = {
				set_planet_flag = building_mem_ancestors_grudge_forge_4
			}
			if = {
				limit = {
					owner = {
						is_ai = yes
					}
				}
				target = {
					remove_building = building_mem_ancestors_grudge_forge_3
					add_building = building_mem_ancestors_grudge_forge_4
				}
			}
		}
	}
}

#  we are finished
situation_event = {
	id = mem_ancestors_grudge.26
	title = mem_ancestors_grudge.26.name
	desc = {
		trigger = {
			owner = {
				gets_mem_ancestors_grudge_hive_text = yes
			}
		}
		text = mem_ancestors_grudge.26.desc_hive
	}
	desc = {
		trigger = {
			owner = {
				gets_mem_ancestors_grudge_hive_text = no
			}
		}
		text = mem_ancestors_grudge.26.desc
	}
	picture = GFX_evt_coronation
	show_sound = event_celebration
	location = target
	situation = this
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.26.a
		trigger = {
			hidden_trigger = {
				owner = {
					has_origin = origin_mem_ancestors_grudge
				}
			}
		}
		target = {
			add_modifier = {
				modifier = mem_ancestors_grudge_city_planet_restored
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.26.b
		custom_tooltip = mem_ancestors_grudge.26.b.tt
		trigger = {
			hidden_trigger = {
				owner = {
					has_origin = origin_mem_ancestors_grudge_machines
				}
			}
		}
		owner = {
			give_technology = {
				tech = tech_mem_ancestors_grudge_robot_traits
			}
		}
		hidden_effect = {
			target = {
				every_owned_pop = {
					limit = {
						is_same_species = owner
					}
					modify_species = {
						species = this
						add_trait = trait_mem_ancestors_grudge_archaeotech_excellence
					}
					#wipe_pop_ethos = yes
					#make_intelligent = yes
					#make_unleashed_messenger = yes
					#pop_change_ethic = ethic_pacifist
					set_timed_pop_flag = {
						flag = changed_pop
						days = 2
					}
				}
				random_owned_pop = {
					limit = {
						has_pop_flag = changed_pop
					}
					owner = {
						change_dominant_species = {
							species = prev
						}
					}
				}
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.26.c
		trigger = {
			hidden_trigger = {
				owner = {
					has_origin = origin_mem_ancestors_grudge_hive
				}
			}
		}
		hidden_effect = {
			owner = {
				country_event = {
					id = mem_ancestors_grudge.27
				}
			}
		}
	}
	after = {
		destroy_situation = this
		if = {
			limit = {
				owner = {
					NOT = {
						has_origin = origin_mem_ancestors_grudge_hive
					}
				}
			}
			owner = {
				add_monthly_resource_mult = {
					resource = unity
					value = 12
				}
			}
		}
	}
}

# A hissy old dragon appears!
# copied from shard
country_event = {
	id = mem_ancestors_grudge.27
	title = mem_ancestors_grudge.27.name
	diplomatic_title = BLANK_STRING
	desc = mem_ancestors_grudge.27.desc
	location = event_target:mem_ancestors_grudge_dragon_fleet
	show_sound = event_dangerous_animals
	diplomatic = yes
	is_triggered_only = yes
	picture_event_data = {
		room = no_video_feed_room
	}
	immediate = {
		country_event = {
			id = story.8
			days = 15
		}
		random_owned_planet = {
			limit = {
				has_planet_flag = mem_ancestors_grudge_planet
			}
			save_event_target_as = mem_ancestors_grudge_planet
		}
		create_country = {
			name = "Grand Dragon"
			type = guardian_dragon
			flag = {
				icon = {
					category = "spherical"
					file = "flag_spherical_6.dds"
				}
				background = {
					category = "backgrounds"
					file = "00_solid.dds"
				}
				colors = {
					"dark_blue"
					"dark_blue"
					"null"
					"null"
				}
			}
			effect = {
				# set_faction_hostility = {
				# 	target = root.owner
				# 	set_hostile = no
				# 	set_neutral = yes
				# 	set_friendly = no
				# }
				save_global_event_target_as = mem_ancestors_grudge_dragon_country
				set_country_flag = mem_ancestors_grudge_dragon_country
				############## this should not break things but rather disable the ether drake on action killed event
				set_country_flag = here_be_the_dragon
				every_playable_country = {
					establish_communications_no_message = event_target:mem_ancestors_grudge_dragon_country
					set_faction_hostility = {
						target = event_target:mem_ancestors_grudge_dragon_country
						set_hostile = no
						set_neutral = yes
						set_friendly = no
					}
				}
				# every_playable_country = {
				# 	limit = {
				# 		NOT = {
				# 			is_same_empire = root.owner
				# 		}
				# 	}
				# 	set_faction_hostility = {
				# 		target = root.owner
				# 		set_hostile = yes
				# 		set_neutral = no
				# 		set_friendly = no
				# 	}
				# }
				create_fleet = {
					name = "Hoarding Dragon"
					settings = {
						spawn_debris = no
						is_boss = yes
					}
					effect = {
						set_owner = event_target:mem_ancestors_grudge_dragon_country
						create_ship = {
							name = ""
							design = "mem_ancestors_grudge_dragon"
							effect = {
								set_ship_flag = mem_ancestors_grudge_dragon_ship
								save_global_event_target_as = mem_ancestors_grudge_dragon_ship
								set_disabled = no
							}
						}
						save_global_event_target_as = mem_ancestors_grudge_dragon_fleet
						set_location = {
							target = event_target:mem_ancestors_grudge_planet
							distance = 10
							angle = 90
							direction = in_system
						}
						set_fleet_stance = passive
						set_aggro_range_measure_from = self
						set_aggro_range = 350
						queue_actions = {
							repeat = {
								find_closest_planet = {
									trigger = {
										id = mem_ancestors_grudge.home.11
										is_star = yes
									}
									found_planet = {
										move_to = this
										orbit_planet = this
										wait = {
											duration = 30
											random = 20
										}
									}
								}
								find_closest_planet = {
									trigger = {
										id = mem_ancestors_grudge.home.12
										is_star = no
										NOT = {
											is_same_value = event_target:mem_ancestors_grudge_planet
										}
									}
									found_planet = {
										move_to = this
										orbit_planet = this
										wait = {
											duration = 30
											random = 20
										}
									}
								}
								find_closest_planet = {
									trigger = {
										id = mem_ancestors_grudge.home.13
										is_same_value = event_target:mem_ancestors_grudge_planet
									}
									found_planet = {
										move_to = this
										orbit_planet = this
										wait = {
											duration = 30
											random = 20
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.27.a
		if = {
			limit = {
				host_has_dlc = "Ancient Relics Story Pack"
			}
			add_modifier = {
				modifier = mem_ancestors_grudge_dragon_tithe
			}
		}
		else = {
			add_modifier = {
				modifier = mem_ancestors_grudge_dragon_tithe_energy
			}
		}
		event_target:mem_ancestors_grudge_planet = {
			add_modifier = {
				modifier = mem_ancestors_grudge_dragon_roost
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.27.b
		custom_tooltip = mem_ancestors_grudge.27.b.tt
		hidden_effect = {
			event_target:mem_ancestors_grudge_dragon_country = {
				set_faction_hostility = {
					target = root
					set_hostile = yes
					set_neutral = no
					set_friendly = no
				}
			}
			event_target:mem_ancestors_grudge_dragon_fleet = {
				set_fleet_stance = aggressive
			}
		}
	}
	after = {
		hidden_effect = {
			country_event = {
				id = mem_ancestors_grudge.29
				days = 720
			}
		}
	}
}

# victorious admiral gains dragonslayer trait
country_event = {
	id = mem_ancestors_grudge.28
	title = mem_ancestors_grudge.28.name
	desc = mem_ancestors_grudge.28.desc
	picture = GFX_evt_space_dragon
	location = fromfrom
	show_sound = event_mystic_reveal
	is_triggered_only = yes
	trigger = {
		from = {
			is_country_type = guardian_dragon
			has_country_flag = mem_ancestors_grudge_dragon_country
		}
		#fromfromfrom = {
		#	has_fleet_flag = dragon_fleet
		#}
	}
	immediate = {
	}
	option = {
		name = leviathans.670.a
		trigger = {
			can_harvest_dna = no
		}
	}
	option = {
		name = galactic_features.385.reanimated
		trigger = {
			is_reanimator = yes
		}
		enable_special_project = {
			name = "REANIMATE_GUARDIAN_DRAGON"
			location = fromfrom.solar_system.star
			owner = root.owner
		}
	}
	option = {
		name = aquatics.105.A
		trigger = {
			can_harvest_dna = yes
		}
		set_country_flag = harvested_dragon_dna
		custom_tooltip = aquatics.105.A.tooltip
	}
	after = {
		if = {
			limit = {
				host_has_dlc = "Ancient Relics Story Pack"
			}
			add_resource = {
				minor_artifacts = 1000
			}
		}
		else = {
			add_resource = {
				influence = 300
			}
		}
		if = {
			limit = {
				exists = fromfrom.leader
			}
			fromfrom.leader = {
				if = {
					limit = {
						leader_class = commander
					}
					add_trait = leader_trait_dragonslayer
				}
			}
		}
		if = {
			limit = {
				has_origin = origin_mem_ancestors_grudge_hive
				OR = {
					has_modifier = mem_ancestors_grudge_dragon_tithe
					#has_modifier = mem_ancestors_grudge_dragon_tithe_energy
				}
			}
			remove_modifier = mem_ancestors_grudge_dragon_tithe
		}
		else_if = {
			limit = {
				has_origin = origin_mem_ancestors_grudge_hive
				OR = {
					#has_modifier = mem_ancestors_grudge_dragon_tithe
					has_modifier = mem_ancestors_grudge_dragon_tithe_energy
				}
			}
			remove_modifier = mem_ancestors_grudge_dragon_tithe_energy
		}
		else = {
			hidden_effect = {
				every_playable_country = {
					limit = {
						has_origin = origin_mem_ancestors_grudge_hive
						OR = {
							has_modifier = mem_ancestors_grudge_dragon_tithe
							has_modifier = mem_ancestors_grudge_dragon_tithe_energy
						}
					}
					remove_modifier = mem_ancestors_grudge_dragon_tithe
					remove_modifier = mem_ancestors_grudge_dragon_tithe_energy
				}
			}
		}
	}
}

# dragon luring tech
country_event = {
	id = mem_ancestors_grudge.29
	title = mem_ancestors_grudge.29.name
	desc = mem_ancestors_grudge.29.desc
	picture = GFX_evt_astral_rift_lonely_planet
	show_sound = event_vivisection
	is_triggered_only = yes
	option = {
		name = mem_ancestors_grudge.29.a
		add_research_option = tech_mem_ancestors_grudge_dragon_lure
		# add_modifier = {
		# 	modifier = mem_ancestors_grudge_dragon_knowledge
		# }
	}
}

#  rapired something on planet
country_event = {
	id = mem_ancestors_grudge.30
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		random_situation = {
			limit = {
				is_situation_type = situation_mem_ancestors_grudge_forge_repairs
			}
			add_situation_progress = 5
		}
	}
}

#  3.stage ecu restored
planet_event = {
	id = mem_ancestors_grudge.35
	title = mem_ancestors_grudge.35.name
	desc = mem_ancestors_grudge.35.desc
	picture = GFX_evt_city_planet_2
	show_sound = event_cityscape
	location = this
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.35.a
	}
	after = {
		change_pc = pc_city
		hidden_effect = {
			save_deposits = yes
			clear_deposits = yes
			restore_saved_deposits = yes
			set_industrial_focus_flags = yes
			#change_pc = pc_city
			relic_world_conversion_effect = {
				DISTRICT = district_arcology_housing
				VARIABLE = num_housing_districts
			}
			relic_world_conversion_effect = {
				DISTRICT = district_arcology_arms_industry
				VARIABLE = num_industrial_districts
			}
			add_deposit = d_former_relic_world
			set_ecu_industrial_districts_effect = yes
			set_planet_entity = {
				entity = "city_planet_entity"
				graphical_culture = owner
			}
			planet_event = {
				id = action.68
			}
			# owner = {
			# 	country_event = { id = distar.201 } # port for living planet distar.197, triggers in event
			# }
			# planet_event = { id = mega.200 }
			if = {
				limit = {
					OR = {
						is_active_resolution = "resolution_ecology_environmental_control_board"
						is_active_resolution = "resolution_ecology_paradise_initiative"
					}
				}
				owner = {
					set_timed_country_flag = {
						flag = resolution_breached_terraformed
						days = 3600
					}
				}
			}
		}
		remove_modifier = mem_ancestors_grudge_city_planet
		remove_deposit = d_mem_ancestors_grudge_boulder		#i like keeping it, maybe not
		add_deposit = d_mem_ancestors_grudge_boulder_park
	}
}

# start forging
country_event = {
	id = mem_ancestors_grudge.40
	title = mem_ancestors_grudge.40.name
	desc = {
		trigger = {
			owner_main_species = {
				is_archetype = MACHINE
			}
		}
		text = mem_ancestors_grudge.40.desc_robots
	}
	desc = {
		trigger = {
			NOT = {
				owner_main_species = {
					is_archetype = MACHINE
				}
			}
		}
		text = mem_ancestors_grudge.40.desc
	}
	picture = GFX_evt_cosmic_storms_calibration
	show_sound = event_finding_loot
	#location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	immediate = {
		random_owned_planet = {
			limit = {
				has_planet_flag = mem_ancestors_grudge_planet
			}
			save_event_target_as = mem_ancestors_grudge_planet
		}
	}
	option = {
		name = mem_ancestors_grudge.40.a
		start_situation = {
			type = situation_mem_ancestors_grudge_crafting
			target = event_target:mem_ancestors_grudge_planet
		}
		random_situation = {
			limit = {
				is_situation_type = situation_mem_ancestors_grudge_crafting
			}
			add_situation_progress = 75
		}
	}
}

# get relic with choice 
country_event = {
	id = mem_ancestors_grudge.41
	title = mem_ancestors_grudge.41.name
	desc = mem_ancestors_grudge.41.desc
	picture = GFX_evt_cosmic_storms_calibration
	show_sound = event_finding_loot
	#location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	immediate = {
		set_variable = {
			which = mem_ancestors_grudge_smithing_quality_rolled
			value = 1
		}
		set_variable = {
			which = mem_ancestors_grudge_smithing_purity_rolled
			value = 1
		}
		inline_script = {
			script = mem_ancestors_grudge/reroll_passive
			AMOUNT = mem_ancestors_grudge_smithing_quality_rolled
		}
	}
	option = {
		name = mem_ancestors_grudge.41.a
		add_relic = r_mem_ancestors_grudge_pauldron
		custom_tooltip = mem_ancestors_grudge.41.official
	}
	option = {
		name = mem_ancestors_grudge.41.b
		add_relic = r_mem_ancestors_grudge_ring
		custom_tooltip = mem_ancestors_grudge.41.scientist
	}
	option = {
		name = mem_ancestors_grudge.41.c
		add_relic = r_mem_ancestors_grudge_sword
		custom_tooltip = mem_ancestors_grudge.41.commander
	}
}

#  crafted a relics
situation_event = {
	id = mem_ancestors_grudge.50
	title = mem_ancestors_grudge.50.name
	desc = {
		trigger = {
			owner_main_species = {
				is_archetype = MACHINE
			}
		}
		text = mem_ancestors_grudge.50.desc_robots
	}
	desc = {
		trigger = {
			NOT = {
				owner_main_species = {
					is_archetype = MACHINE
				}
			}
		}
		text = mem_ancestors_grudge.50.desc
	}
	picture = GFX_mem_ancestors_grudge_runesmith_in_forge
	show_sound = event_finding_loot
	location = target
	situation = this
	is_triggered_only = yes
	immediate = {
		# clear old stuff
		owner = {
			clear_variable = mem_ancestors_grudge_rune_intensity
			remove_country_flag = mem_ancestors_grudge_relic_flag1
			remove_country_flag = mem_ancestors_grudge_relic_flag2
			remove_country_flag = mem_ancestors_grudge_relic_flag3
			remove_country_flag = mem_ancestors_grudge_relic_flag4
			remove_country_flag = mem_ancestors_grudge_relic_flag5
			remove_country_flag = mem_ancestors_grudge_relic_flag6
			remove_country_flag = mem_ancestors_grudge_relic_flag7
			remove_country_flag = mem_ancestors_grudge_relic_flag8
		}
		# roll for relic modifiers
		owner = {
			set_variable = {
				which = mem_ancestors_grudge_rune_intensity
				value = owner.modifier:mem_ancestors_grudge_rune_power_produces_mult
			}
			change_variable = {
				which = mem_ancestors_grudge_rune_intensity
				value = 1
			}
		}
		# roll for rarity
		mem_ancestors_grudge_roll_for_relic_rarity = yes
		# roll for purity
		mem_ancestors_grudge_roll_for_relic_purity = yes
		if = {
			limit = {
				mem_has_not_relic_flag = yes
			}
			# roll for relic
			owner = {
				random_list = {
					100 = {
						set_country_flag = mem_ancestors_grudge_sword_flag
					}
					100 = {
						set_country_flag = mem_ancestors_grudge_ring_flag
					}
					100 = {
						set_country_flag = mem_ancestors_grudge_pauldron_flag
					}
				}
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.50.a
		destroy_situation = this
		owner = {
			if = {
				limit = {
					has_country_flag = mem_ancestors_grudge_sword_flag
				}
				add_relic = r_mem_ancestors_grudge_sword
			}
			else_if = {
				limit = {
					has_country_flag = mem_ancestors_grudge_ring_flag
				}
				add_relic = r_mem_ancestors_grudge_ring
			}
			else_if = {
				limit = {
					has_country_flag = mem_ancestors_grudge_pauldron_flag
				}
				add_relic = r_mem_ancestors_grudge_pauldron
			}
			custom_tooltip = mem_ancestors_grudge.50.a.tt
		}
	}
	option = {
		name = mem_ancestors_grudge.50.b
		destroy_situation = this
		owner = {
			if = {
				limit = {
					has_country_flag = mem_ancestors_grudge_sword_flag
				}
				add_relic = r_mem_ancestors_grudge_sword
			}
			else_if = {
				limit = {
					has_country_flag = mem_ancestors_grudge_ring_flag
				}
				add_relic = r_mem_ancestors_grudge_ring
			}
			else_if = {
				limit = {
					has_country_flag = mem_ancestors_grudge_pauldron_flag
				}
				add_relic = r_mem_ancestors_grudge_pauldron
			}
			custom_tooltip = mem_ancestors_grudge.50.a.tt
			custom_tooltip = mem_ancestors_grudge.50.b.tt
			hidden_effect = {
				set_country_flag = mem_ancestors_grudge_dont_event_me
			}
		}
	}
	# option = {
	# 	name = mem_ancestors_grudge.50.b
	# }
	after = {
		hidden_effect = {
			owner = {
				remove_country_flag = mem_ancestors_grudge_sword_flag
				remove_country_flag = mem_ancestors_grudge_pauldron_flag
				remove_country_flag = mem_ancestors_grudge_ring_flag
			}
		}
	}
}

#  crafted a relics hidden
situation_event = {
	id = mem_ancestors_grudge.51
	hide_window = yes
	situation = this
	is_triggered_only = yes
	immediate = {
		# clear old stuff
		owner = {
			clear_variable = mem_ancestors_grudge_rune_intensity
			remove_country_flag = mem_ancestors_grudge_relic_flag1
			remove_country_flag = mem_ancestors_grudge_relic_flag2
			remove_country_flag = mem_ancestors_grudge_relic_flag3
			remove_country_flag = mem_ancestors_grudge_relic_flag4
			remove_country_flag = mem_ancestors_grudge_relic_flag5
			remove_country_flag = mem_ancestors_grudge_relic_flag6
			remove_country_flag = mem_ancestors_grudge_relic_flag7
			remove_country_flag = mem_ancestors_grudge_relic_flag8
		}
		# roll for relic modifiers
		owner = {
			set_variable = {
				which = mem_ancestors_grudge_rune_intensity
				value = owner.modifier:mem_ancestors_grudge_rune_power_produces_mult
			}
			change_variable = {
				which = mem_ancestors_grudge_rune_intensity
				value = 1
			}
		}
		# roll for rarity
		mem_ancestors_grudge_roll_for_relic_rarity = yes
		if = {
			limit = {
				mem_has_not_relic_flag = yes
			}
			# roll for relic
			owner = {
				random_list = {
					100 = {
						set_country_flag = mem_ancestors_grudge_sword_flag
					}
					100 = {
						set_country_flag = mem_ancestors_grudge_ring_flag
					}
					100 = {
						set_country_flag = mem_ancestors_grudge_pauldron_flag
					}
				}
			}
		}
		owner = {
			if = {
				limit = {
					has_country_flag = mem_ancestors_grudge_sword_flag
				}
				add_relic = r_mem_ancestors_grudge_sword
				create_message = {
					type = MEM_ANCESTORS_GRUDGE_GOT_RELIC_3
					days = 60
					target = this
				}
			}
			else_if = {
				limit = {
					has_country_flag = mem_ancestors_grudge_ring_flag
				}
				add_relic = r_mem_ancestors_grudge_ring
				create_message = {
					type = MEM_ANCESTORS_GRUDGE_GOT_RELIC_1
					days = 60
					target = this
				}
			}
			else_if = {
				limit = {
					has_country_flag = mem_ancestors_grudge_pauldron_flag
				}
				add_relic = r_mem_ancestors_grudge_pauldron
				create_message = {
					type = MEM_ANCESTORS_GRUDGE_GOT_RELIC_2
					days = 60
					target = this
				}
			}
			#custom_tooltip = mem_ancestors_grudge.50.a.tt
		}
		owner = {
			remove_country_flag = mem_ancestors_grudge_sword_flag
			remove_country_flag = mem_ancestors_grudge_pauldron_flag
			remove_country_flag = mem_ancestors_grudge_ring_flag
		}
		destroy_situation = this
	}
}

country_event = {
	id = mem_ancestors_grudge.52
	title = mem_ancestors_grudge.52.name
	desc = mem_ancestors_grudge.52.desc
	picture = GFX_evt_hive_cyberization
	show_sound = event_the_flesh_is_weak
	is_triggered_only = yes
	immediate = {
		random_owned_planet = {
			limit = {
				has_mem_relicforge = yes
			}
			save_event_target_as = mem_ancestors_grudge_planet
		}
	}
	option = {
		name = mem_ancestors_grudge.52.a
		give_technology = {
			tech = tech_mem_ancestors_grudge_robot_factory
		}
		if = {
			limit = {
				event_target:mem_ancestors_grudge_planet = {
					free_building_slots > 0
				}
			}
			event_target:mem_ancestors_grudge_planet = {
				add_building = building_mem_ancestors_grudge_robot_factory
			}
		}
		else_if = {
			limit = {
				event_target:mem_ancestors_grudge_planet = {
					has_building = building_mem_ancestors_grudge_ruins
				}
			}
			event_target:mem_ancestors_grudge_planet = {
				add_building = building_mem_ancestors_grudge_robot_factory
				remove_building = building_mem_ancestors_grudge_ruins
			}
		}
	}
	# option = {
	# 	name = mem_ancestors_grudge.52.b
	# 	event_target:mem_ancestors_grudge_planet = {
	# 		add_modifier = {
	# 			modifier = mem_ancestors_grudge_lost_forge_apply_knowledge
	# 		}
	# 	}
	# }
	after = {
		remove_modifier = mem_ancestors_grudge_unknown_design
		owner_main_species = {
			change_species_characteristics = {
				can_be_modified = yes
				#can_change_leader = yes
			}
		}
	}
}

# actiavted a relic
country_event = {
	id = mem_ancestors_grudge.45
	title = mem_ancestors_grudge.45.name
	desc = {
		trigger = {
			owner_main_species = {
				is_archetype = MACHINE
			}
		}
		text = mem_ancestors_grudge.45.desc_robots
	}
	desc = {
		trigger = {
			NOT = {
				owner_main_species = {
					is_archetype = MACHINE
				}
			}
		}
		text = mem_ancestors_grudge.45.desc
	}
	picture = GFX_evt_knights
	show_sound = evn_tox_knights_of_the_toxic_god
	#location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	immediate = {
		random_owned_planet = {
			limit = {
				has_planet_flag = mem_ancestors_grudge_planet
			}
			save_event_target_as = mem_ancestors_grudge_planet
		}
		change_variable = {
			which = mem_ancestors_grudge_activated_relics_counter
			value = 1
		}
		# i hate this ... now with scripts this looks better and i can actually read it
		if = {
			limit = {
				has_relic = r_mem_ancestors_grudge_pauldron
			}
			inline_script = {
				script = mem_ancestors_grudge/random_leader
				LEADER = official
			}
		}
		else_if = {
			limit = {
				has_relic = r_mem_ancestors_grudge_sword
			}
			inline_script = {
				script = mem_ancestors_grudge/random_leader
				LEADER = commander
			}
		}
		else_if = {
			limit = {
				has_relic = r_mem_ancestors_grudge_ring
			}
			inline_script = {
				script = mem_ancestors_grudge/random_leader
				LEADER = scientist
			}
		}
		set_variable = {
			which = mem_ancestors_grudge_activated_rune_ruler_strength
			value = 0
		}
		change_variable = {
			which = mem_ancestors_grudge_activated_rune_ruler_strength
			value = owner.mem_ancestors_grudge_rune_intensity
		}
		##### balance reason
		multiply_variable = {
			which = mem_ancestors_grudge_activated_rune_ruler_strength
			value = 25
		}
		multiply_variable = {
			which = mem_ancestors_grudge_activated_rune_ruler_strength
			value = mem_ancestors_grudge_smithing_quality_rolled
		}
	}
	option = {
		name = mem_ancestors_grudge.45.d
		trigger = {
			host_has_dlc = "Ancient Relics Story Pack"
		}
		add_resource = {
			minor_artifacts = 1000
			mult = owner.mem_ancestors_grudge_rune_intensity
		}
	}
	option = {
		name = mem_ancestors_grudge.45.d
		trigger = {
			NOT = {
				host_has_dlc = "Ancient Relics Story Pack"
			}
		}
		add_resource = {
			unity = 937
			mult = owner.mem_ancestors_grudge_rune_intensity
		}
	}
	option = {
		name = mem_ancestors_grudge.45.a
		trigger = {
			check_variable_arithmetic = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value >= 1
			}
			is_gestalt = no
			exists = event_target:leader_1
		}
		event_target:leader_1 = {
			mem_ancestors_grudge_trait_effect = yes
		}
	}
	option = {
		name = mem_ancestors_grudge.45.b
		trigger = {
			check_variable_arithmetic = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value >= 1
			}
			is_gestalt = no
			exists = event_target:leader_2
		}
		event_target:leader_2 = {
			mem_ancestors_grudge_trait_effect = yes
		}
	}
	option = {
		name = mem_ancestors_grudge.45.c
		trigger = {
			check_variable_arithmetic = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value >= 1
			}
			is_gestalt = no
			exists = event_target:leader_3
		}
		event_target:leader_3 = {
			mem_ancestors_grudge_trait_effect = yes
		}
	}
	option = {
		name = mem_ancestors_grudge.45.a.2
		trigger = {
			has_authority = auth_machine_intelligence
			ruler = {
				OR = {
					has_trait = leader_trait_legendary_mem_ancestors_grudge_machine_nexus_one
					has_trait = leader_trait_legendary_mem_ancestors_grudge_machine_nexus_two
					has_trait = leader_trait_legendary_mem_ancestors_grudge_machine_nexus_three
					has_trait = leader_trait_legendary_mem_ancestors_grudge_machine_nexus_four
				}
			}
			check_variable_arithmetic = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value >= 1
			}
		}
		custom_tooltip = mem_ancestors_grudge.45.a.2.tt
		hidden_effect = {
			multiply_variable = {
				which = mem_ancestors_grudge_activated_rune_ruler_strength
				value = 0.01
			}
			ruler = {
				change_variable = {
					which = mem_ancestors_grudge_activated_rune_ruler_strength
					value = root.mem_ancestors_grudge_activated_rune_ruler_strength
				}
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.45.e.2
		trigger = {
			check_variable_arithmetic = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value >= 2
			}
		}
		mem_ancestors_grudge_give_random_archeotech = yes
	}
	option = {
		name = mem_ancestors_grudge.45.e
		trigger = {
			check_variable_arithmetic = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value >= 3
			}
		}
		add_monthly_resource_mult = {
			resource = physics_research
			value = 3
		}
		add_monthly_resource_mult = {
			resource = society_research
			value = 3
		}
		add_monthly_resource_mult = {
			resource = engineering_research
			value = 3
		}
	}
	option = {
		name = mem_ancestors_grudge.45.ee
		trigger = {
			has_authority = auth_machine_intelligence
			check_variable_arithmetic = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value >= 3
			}
		}
		custom_tooltip = mem_ancestors_grudge.45.ee.tt_create_leader
		hidden_effect = {
			if = {
				limit = {
					has_relic = r_mem_ancestors_grudge_pauldron
				}
				create_leader = {
					class = official
					species = root.owner_main_species
				}
			}
			else_if = {
				limit = {
					has_relic = r_mem_ancestors_grudge_sword
				}
				create_leader = {
					class = commander
					species = root.owner_main_species
				}
			}
			else_if = {
				limit = {
					has_relic = r_mem_ancestors_grudge_ring
				}
				create_leader = {
					class = scientist
					species = root.owner_main_species
				}
			}
			last_created_leader = {
				set_age = 0
				set_skill = 3
				#set_name = rand
				mem_ancestors_grudge_trait_effect = yes
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.45.e.3
		trigger = {
			check_variable_arithmetic = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value >= 4
			}
		}
		add_monthly_resource_mult = {
			resource = influence
			value = 50
			max = 1000
		}
	}
	option = {
		name = mem_ancestors_grudge.45.e.4
		trigger = {
			check_variable_arithmetic = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value >= 5
			}
			has_relic = r_mem_ancestors_grudge_pauldron
		}
		add_modifier = {
			modifier = mem_ancestors_grudge_golden_age
			days = 360
		}
	}
	option = {
		name = mem_ancestors_grudge.45.g
		trigger = {
			check_variable_arithmetic = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value >= 6
			}
			has_relic = r_mem_ancestors_grudge_pauldron
		}
		custom_tooltip = mem_ancestors_grudge.45.exceptional_pauldron
		hidden_effect = {
			every_owned_planet = {
				if = {
					limit = {
						has_planetary_ascension_tier = 0
					}
					set_planetary_ascension_tier = 1
				}
				else_if = {
					limit = {
						has_planetary_ascension_tier = 1
					}
					set_planetary_ascension_tier = 2
				}
				else_if = {
					limit = {
						has_planetary_ascension_tier = 2
					}
					set_planetary_ascension_tier = 3
				}
				else_if = {
					limit = {
						has_planetary_ascension_tier = 3
					}
					set_planetary_ascension_tier = 4
				}
				else_if = {
					limit = {
						has_planetary_ascension_tier = 4
					}
					set_planetary_ascension_tier = 5
				}
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.45.h
		trigger = {
			check_variable_arithmetic = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value >= 6
			}
			has_relic = r_mem_ancestors_grudge_ring
		}
		while = {
			count = 5
			add_random_research_option = {
				add_progress = 0.4
				ignore_rare = yes
				# fail_effects = { #should never fail, when do  you truly run out of research?
				# }
			}
		}
		custom_tooltip = mem_ancestors_grudge.45.exceptional_ring
	}
	option = {
		name = mem_ancestors_grudge.45.i
		trigger = {
			check_variable_arithmetic = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value >= 6
			}
			has_relic = r_mem_ancestors_grudge_sword
		}
		custom_tooltip = mem_ancestors_grudge.45.exceptional_sword
		every_playable_country = {
			limit = {
				has_truce = root
			}
			end_truce = root
		}
	}
	# option = {
	# 	name = mem_ancestors_grudge.45.e
	# }
	after = {
		mem_ancestors_grudge_remove_all_relics = yes
		start_situation = {
			type = situation_mem_ancestors_grudge_crafting
			target = event_target:mem_ancestors_grudge_planet
		}
		hidden_effect = {
			clear_variable = mem_ancestors_grudge_activated_rune_ruler_strength
			set_variable = {
				which = mem_ancestors_grudge_rarity_increase
				value = 0
			}
		}
		hidden_effect = {
			add_modifier = {
				modifier = "relic_activation_cooldown"
				days = 360
			}
		}
	}
}

#### hive relic activation
# # TODO more options 
# country_event = {
# 	id = mem_ancestors_grudge.46
# 	title = mem_ancestors_grudge.46.title
# 	desc = mem_ancestors_grudge.46.desc
# 	show_sound = event_celebration
# 	picture = GFX_evt_physics_research
# 	#location = event_target:mem_ancestors_grudge_planet
# 	is_triggered_only = yes
# 	trigger = {
# 	}
# 	immediate = {
# 	}
# 	option = {
# 		name = mem_ancestors_grudge.46.a		# upgrade
# 		custom_tooltip = mem_ancestors_grudge.46.a.upgrade_tt
# 		trigger = {
# 			check_variable_arithmetic = {
# 				which = this.mem_ancestors_grudge_smithing_quality_rolled
# 				value < 6
# 			}
# 		}
# 		hidden_effect = {
# 			change_variable = {
# 				which = mem_ancestors_grudge_situation_rarity
# 				value = 1
# 			}
# 			mem_ancestors_grudge_add_relic_modifier = yes
# 		}
# 	}
# 	option = {
# 		name = mem_ancestors_grudge.46.c		# increase intensity # TODO purity
# 		custom_tooltip = mem_ancestors_grudge.46.c.upgrade_passive_tt
# 		trigger = {
# 			check_variable = {
# 				which = mem_ancestors_grudge_rune_intensity
# 				value <= 2
# 			}
# 			host_has_dlc = "Ancient Relics Story Pack"
# 		}
# 		allow = {
# 			resource_stockpile_compare = {
# 				resource = minor_artifacts
# 				value >= 500
# 			}
# 		}
# 		hidden_effect = {
# 			change_variable = {
# 				which = mem_ancestors_grudge_rune_intensity
# 				value = 0.25
# 			}
# 		}
# 	}
# 	option = {
# 		name = mem_ancestors_grudge.46.c		# increase intensity
# 		custom_tooltip = mem_ancestors_grudge.46.c.upgrade_passive_tt
# 		trigger = {
# 			check_variable = {
# 				which = mem_ancestors_grudge_rune_intensity
# 				value <= 3
# 			}
# 			NOT = {
# 				host_has_dlc = "Ancient Relics Story Pack"
# 			}
# 		}
# 		allow = {
# 			resource_stockpile_compare = {
# 				resource = alloys
# 				value >= 1000
# 			}
# 		}
# 		hidden_effect = {
# 			change_variable = {
# 				which = mem_ancestors_grudge_rune_intensity
# 				value = 0.25
# 			}
# 		}
# 	}
# 	option = {
# 		name = mem_ancestors_grudge.46.b		# rare shuffle
# 		custom_tooltip = mem_ancestors_grudge.46.b.shuffle_stats_tt
# 		hidden_effect = {
# 			inline_script = {
# 				script = mem_ancestors_grudge/reroll_passive
# 				AMOUNT = mem_ancestors_grudge_situation_rarity
# 			}
# 		}
# 	}
# 	# copy from actual thing
# 	option = {
# 		name = mem_ancestors_grudge.45.g
# 		trigger = {
# 			check_variable = {
# 				which = mem_ancestors_grudge_situation_rarity
# 				value >= 7
# 			}
# 			has_relic = r_mem_ancestors_grudge_pauldron
# 		}
# 		#custom_tooltip = mem_ancestors_grudge.45.exceptional_pauldron
# 		add_modifier = {
# 			modifier = mem_ancestors_grudge_golden_age
# 			days = 360
# 		}
# 		add_modifier = {
# 			modifier = relic_activation_cooldown
# 			days = 1800
# 		}
# 	}
# 	option = {
# 		name = mem_ancestors_grudge.45.h
# 		trigger = {
# 			check_variable = {
# 				which = mem_ancestors_grudge_situation_rarity
# 				value >= 7
# 			}
# 			has_relic = r_mem_ancestors_grudge_ring
# 		}
# 		while = {
# 			count = 5
# 			add_random_research_option = {
# 				add_progress = 0.2
# 				ignore_rare = yes
# 				# fail_effects = { #should never fail, when do  you truly run out of research?
# 				# }
# 			}
# 		}
# 		custom_tooltip = mem_ancestors_grudge.45.exceptional_ring
# 		add_modifier = {
# 			modifier = relic_activation_cooldown
# 			days = 1800
# 		}
# 	}
# 	option = {
# 		name = mem_ancestors_grudge.45.i
# 		trigger = {
# 			check_variable = {
# 				which = mem_ancestors_grudge_situation_rarity
# 				value >= 7
# 			}
# 			has_relic = r_mem_ancestors_grudge_sword
# 		}
# 		custom_tooltip = mem_ancestors_grudge.45.exceptional_sword
# 		every_playable_country = {
# 			limit = {
# 				has_truce = root
# 			}
# 			end_truce = root
# 		}
# 		add_modifier = {
# 			modifier = relic_activation_cooldown
# 			days = 1800
# 		}
# 	}
# 	after = {
# 		# hidden_effect = {
# 		# 	add_modifier = {
# 		# 		modifier = "relic_activation_cooldown"
# 		# 		days = 1800
# 		# 	}
# 		# }
# 	}
# }
# hidden activation
country_event = {
	id = mem_ancestors_grudge.46
	hide_window = yes
	#location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	trigger = {
	}
	immediate = {
		if = {
			limit = {
				check_variable_arithmetic = {
					which = this.mem_ancestors_grudge_smithing_quality_rolled
					value < 6
				}
			}
			change_variable = {
				which = mem_ancestors_grudge_smithing_quality_rolled
				value = 1
			}
			mem_ancestors_grudge_add_relic_modifier = yes
			add_modifier = {
				modifier = relic_activation_cooldown
				days = 360
			}
		}
		else_if = {
			limit = {
				has_relic = r_mem_ancestors_grudge_sword
			}
			every_playable_country = {
				limit = {
					has_truce = root
				}
				end_truce = root
			}
			add_modifier = {
				modifier = relic_activation_cooldown
				days = 1800
			}
		}
		else_if = {
			limit = {
				has_relic = r_mem_ancestors_grudge_pauldron
			}
			every_owned_planet = {
				if = {
					limit = {
						has_planetary_ascension_tier = 0
					}
					set_planetary_ascension_tier = 1
				}
				else_if = {
					limit = {
						has_planetary_ascension_tier = 1
					}
					set_planetary_ascension_tier = 2
				}
				else_if = {
					limit = {
						has_planetary_ascension_tier = 2
					}
					set_planetary_ascension_tier = 3
				}
				else_if = {
					limit = {
						has_planetary_ascension_tier = 3
					}
					set_planetary_ascension_tier = 4
				}
				else_if = {
					limit = {
						has_planetary_ascension_tier = 4
					}
					set_planetary_ascension_tier = 5
				}
			}
			add_modifier = {
				modifier = relic_activation_cooldown
				days = 1800
			}
		}
		else_if = {
			limit = {
				has_relic = r_mem_ancestors_grudge_ring
			}
			while = {
				count = 5
				add_random_research_option = {
					add_progress = 0.2
					ignore_rare = yes
					# fail_effects = { #should never fail, when do  you truly run out of research?
					# }
				}
			}
			add_modifier = {
				modifier = relic_activation_cooldown
				days = 1800
			}
		}
	}
	after = {
		
	}
}

# we found our enemy
# Executed right after country has established communications with another country. Always fires, even if comms are established with establish_communications_no_message
# This = Country which established the communications
# From = Country which communications were established with
country_event = {
	id = mem_ancestors_grudge.55
	title = mem_ancestors_grudge.55.name
	desc = mem_ancestors_grudge.55.desc
	picture = GFX_evt_crisis_declared
	show_sound = event_dangerous_animals
	location = from.capital_star
	is_triggered_only = yes
	trigger = {
		OR = {
			AND = {
				is_mem_runesmith = yes
				from = {
					has_origin = origin_mem_ancestors_grudge_advanced_start
				}
			}
			AND = {
				from = {
					is_mem_runesmith = yes
				}
				has_origin = origin_mem_ancestors_grudge_advanced_start
			}
		}
	}
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.55.a
		# communcation is not triggered for both countries so we just proc it for both
		if = {
			limit = {
				has_origin = origin_mem_ancestors_grudge_advanced_start
			}
			from = {
				country_event = {
					id = mem_ancestors_grudge.55
					scopes = {
						from = root
					}
				}
			}
		}
		else = {
			begin_event_chain = {
				event_chain = mem_ancestors_grudge_revenge_arc
			}
		}
	}
}

# we killed them, hidden
#This = destroyed country
#From = optional, destroyer (country)
country_event = {
	id = mem_ancestors_grudge.60
	hide_window = yes
	#location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	trigger = {
		AND = {
			has_origin = origin_mem_ancestors_grudge_advanced_start
			from = {
				is_mem_runesmith = yes
			}
		}
	}
	immediate = {
		from = {
			country_event = {
				id = mem_ancestors_grudge.75
			}
		}
	}
}

# we killed them, notify
country_event = {
	id = mem_ancestors_grudge.75
	title = mem_ancestors_grudge.75.name
	desc = {
		trigger = {
			owner_main_species = {
				is_archetype = MACHINE
			}
		}
		text = mem_ancestors_grudge.75.desc_robots
	}
	desc = {
		trigger = {
			NOT = {
				owner_main_species = {
					is_archetype = MACHINE
				}
			}
		}
		text = mem_ancestors_grudge.75.desc
	}
	picture = GFX_evt_crisis_defeated
	show_sound = event_space_battle
	#location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	# trigger = {
	# 	AND = {
	# 		has_origin = origin_mem_ancestors_grudge_advanced_start
	# 		from = {
	# 			is_mem_runesmith = yes
	# 		}
	# 	}
	# }
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.75.a
		add_modifier = {
			modifier = mem_ancestors_grudge_lost_forge_beat_sworn_enemy
		}
	}
	option = {
		name = mem_ancestors_grudge.75.b
		add_monthly_resource_mult = {
			resource = unity
			value = 24
		}
		add_resource = {
			influence = 500
		}
	}
	after = {
		end_event_chain = mem_ancestors_grudge_revenge_arc
	}
}

# others killed them
#This = destroyed country
#From = optional, destroyer (country)
country_event = {
	id = mem_ancestors_grudge.65
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		AND = {
			has_origin = origin_mem_ancestors_grudge_advanced_start
			NOT = {
				from = {
					is_mem_runesmith = yes
				}
			}
		}
	}
	immediate = {
		every_playable_country = {
			limit = {
				is_mem_runesmith = yes
				has_communications = root
			}
			country_event = {
				id = mem_ancestors_grudge.70
				scopes = {
					from = from
					fromfrom = root
				}
			}
		}
	}
}

# others  killed them notify
country_event = {
	id = mem_ancestors_grudge.70
	title = mem_ancestors_grudge.70.name
	desc = {
		trigger = {
			owner_main_species = {
				is_archetype = MACHINE
			}
		}
		text = mem_ancestors_grudge.70.desc_robots
	}
	desc = {
		trigger = {
			NOT = {
				owner_main_species = {
					is_archetype = MACHINE
				}
			}
		}
		text = mem_ancestors_grudge.70.desc
	}
	picture = GFX_evt_crisis_defeated
	show_sound = event_space_battle
	#location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.70.a
		end_event_chain = mem_ancestors_grudge_revenge_arc
	}
}

# (Mutated Creatures)
situation_event = {
	id = mem_ancestors_grudge.100
	title = "mem_ancestors_grudge.100.title"
	desc = "mem_ancestors_grudge.100.desc"
	picture = GFX_evt_ground_combat
	show_sound = event_ground_battle
	location = target
	is_triggered_only = yes
	situation = this
	trigger = {
		situation_progress >= 200		# if you get this too early, you are screwed
	}
	immediate = {
		target = {
			create_country = {
				name = "NAME_Deformed_Creatures"
				type = faction
				effect = {
					establish_communications_no_message = root.owner
				}
			}
			while = {
				count = 2
				create_army = {
					name = "NAME_Deformed_Creatures"
					owner = last_created_country
					type = "mutant_army"
				}
				create_army = {
					name = "NAME_Twisted_Beasts"
					owner = last_created_country
					type = "mutant_army"
				}
				create_army = {
					name = "NAME_Mutated_Horrors"
					owner = last_created_country
					type = "mutant_army"
				}
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.100.a
		custom_tooltip = terraforming_mutants_attack
		add_situation_progress = 10
	}
}

# random tech
situation_event = {
	id = mem_ancestors_grudge.105
	title = "mem_ancestors_grudge.105.title"
	desc = {
		trigger = {
			owner_main_species = {
				is_archetype = MACHINE
			}
		}
		text = mem_ancestors_grudge.105.desc_robots
	}
	desc = {
		trigger = {
			NOT = {
				owner_main_species = {
					is_archetype = MACHINE
				}
			}
		}
		text = mem_ancestors_grudge.105.desc
	}
	picture = GFX_evt_obelisk_tourists
	show_sound = event_activating_unknown_technology
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.105.a
		owner = {
			mem_ancestors_grudge_give_random_archeotech = yes
		}
	}
	option = {
		name = mem_ancestors_grudge.105.b
		add_situation_progress = 20
	}
	option = {
		name = mem_ancestors_grudge.105.c
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = 3
			}
		}
	}
}

# add shield gen
situation_event = {
	id = mem_ancestors_grudge.110
	title = "mem_ancestors_grudge.110.title"
	desc = "mem_ancestors_grudge.110.desc"
	picture = GFX_evt_obelisk_tourists
	show_sound = event_activating_unknown_technology
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
		set_situation_flag = mem_got_shield
	}
	trigger = {
		NOT = {
			has_situation_flag = mem_got_shield
		}
		target = {
			NOT = {
				has_building = building_planetary_shield_generator
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.110.a
		target = {
			if = {
				limit = {
					has_building = building_mem_ancestors_grudge_ruins
				}
				remove_building = building_mem_ancestors_grudge_ruins
			}
			add_building = building_planetary_shield_generator
			ruin_building = building_planetary_shield_generator
		}
	}
	option = {
		name = mem_ancestors_grudge.110.b
		owner = {
			add_research_option = tech_planetary_shield_generator
		}
	}
}

# stasis pod
situation_event = {
	id = mem_ancestors_grudge.115
	title = "mem_ancestors_grudge.115.title"
	desc = {
		trigger = {
			owner_main_species = {
				is_archetype = MACHINE
			}
		}
		text = mem_ancestors_grudge.115.desc_robots
	}
	desc = {
		trigger = {
			NOT = {
				owner_main_species = {
					is_archetype = MACHINE
				}
			}
		}
		text = mem_ancestors_grudge.115.desc
	}
	picture = GFX_evt_clones
	show_sound = event_ancient_drone
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	# trigger = {
	# 	target = {
	# 		NOT = {
	# 			has_building = building_planetary_shield_generator
	# 		}
	# 	}
	# }
	option = {
		name = mem_ancestors_grudge.115.a
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = influence
					value >= 20
				}
			}
		}
		target = {
			#same effect, different localisation
			if = {
				limit = {
					owner_main_species = {
						is_archetype = MACHINE
					}
				}
				add_deposit = d_mem_ancestors_grudge_ruined_stasis_robots
			}
			else = {
				add_deposit = d_mem_ancestors_grudge_ruined_stasis
			}
		}
		owner = {
			add_resource = {
				influence = -20
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.115.b
		add_situation_progress = 10
	}
}

# random bomb
situation_event = {
	id = mem_ancestors_grudge.120
	title = "mem_ancestors_grudge.120.title"
	desc = "mem_ancestors_grudge.120.desc"
	picture = GFX_evt_archaeologists_escaping
	show_sound = event_red_alert
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.120.a
		random_list = {
			33 = {
				target = {
					add_blocker = {
						type = d_mem_ancestors_grudge_bomb_crater
					}
					add_planet_devastation = 10
				}
			}
			66 = {
				add_situation_progress = 5
			}
		}
	}
}

#  someone else got forge
planet_event = {
	id = mem_ancestors_grudge.200
	hide_window = yes
	#show_sound = event_collapsing_ruins
	location = this
	is_triggered_only = yes
	trigger = {
		has_planet_flag = mem_ancestors_grudge_planet
		owner = {
			is_mem_runesmith = no
		}
		has_mem_relicforge = yes
	}
	immediate = {
		# owner = {
		# 	save_event_target_as = mem_ancestors_grudge_revengetarget
		# }
		every_playable_country = {
			limit = {
				is_mem_runesmith = yes
			}
			country_event = {
				id = mem_ancestors_grudge.205
				scopes = {
					from = root.owner
				}
			}
		}
	}
}

# notify runesmiths
country_event = {
	id = mem_ancestors_grudge.205
	title = mem_ancestors_grudge.205.name
	desc = mem_ancestors_grudge.205.desc
	picture = GFX_evt_crisis_declared
	show_sound = event_ship_bridge
	is_triggered_only = yes
	option = {
		name = mem_ancestors_grudge.205.a		# they have wronged us !
		if = {
			limit = {
				exists = from
				NOT = {
					is_at_war_with = from
				}
			}
			declare_war = {
				target = from
				attacker_war_goal = wg_wipe_them_out
			}
		}
		add_modifier = {
			modifier = mem_ancestors_grudge_lost_forge_butrevenge
		}
	}
	option = {
		name = mem_ancestors_grudge.205.b		# its ok 
		add_modifier = {
			modifier = mem_ancestors_grudge_lost_forge
		}
	}
}

#  you got it back
planet_event = {
	id = mem_ancestors_grudge.210
	hide_window = yes
	#show_sound = event_collapsing_ruins
	#location = this
	is_triggered_only = yes
	trigger = {
		has_planet_flag = mem_ancestors_grudge_planet
		owner = {
			is_mem_runesmith = yes
			OR = {
				has_modifier = mem_ancestors_grudge_lost_forge
				has_modifier = mem_ancestors_grudge_lost_forge_butrevenge
			}
		}
		has_mem_relicforge = yes
	}
	immediate = {
		owner = {
			country_event = {
				id = mem_ancestors_grudge.215
			}
		}
	}
}

country_event = {
	id = mem_ancestors_grudge.215
	title = mem_ancestors_grudge.215.name
	desc = mem_ancestors_grudge.215.desc
	picture = GFX_evt_crisis_defeated
	show_sound = event_announcement
	is_triggered_only = yes
	option = {
		name = mem_ancestors_grudge.215.a		# we got it back
		if = {
			limit = {
				has_modifier = mem_ancestors_grudge_lost_forge
			}
			remove_modifier = mem_ancestors_grudge_lost_forge
		}
		else = {
			remove_modifier = mem_ancestors_grudge_lost_forge_butrevenge
		}
	}
}

# this = planet
# colony destroyed
planet_event = {
	id = mem_ancestors_grudge.221
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_planet_flag = mem_ancestors_grudge_planet
		habitable_planet = no
	}
	immediate = {
		every_playable_country = {
			limit = {
				is_mem_runesmith = yes
			}
			country_event = {
				id = mem_ancestors_grudge.220
			}
		}
		remove_building = building_mem_ancestors_grudge_forge_0
		remove_building = building_mem_ancestors_grudge_forge_1
		remove_building = building_mem_ancestors_grudge_forge_2
		remove_building = building_mem_ancestors_grudge_forge_3
		remove_building = building_mem_ancestors_grudge_forge_4
	}
}

# notify
# colony destroyed
country_event = {
	id = mem_ancestors_grudge.220
	title = mem_ancestors_grudge.220.name
	desc = mem_ancestors_grudge.220.desc
	picture = GFX_evt_large_explosion
	show_sound = event_collapsing_ruins
	is_triggered_only = yes
	trigger = {
	}
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.220.a
	}
	after = {
		if = {
			limit = {
				owner = {
					any_situation = {
						is_situation_type = situation_mem_ancestors_grudge_crafting
					}
				}
			}
			owner = {
				random_situation = {
					limit = {
						is_situation_type = situation_mem_ancestors_grudge_crafting
					}
					destroy_situation = this
				}
			}
		}
		if = {
			limit = {
				owner = {
					any_situation = {
						is_situation_type = situation_mem_ancestors_grudge_forge_repairs
					}
				}
			}
			owner = {
				random_situation = {
					limit = {
						is_situation_type = situation_mem_ancestors_grudge_forge_repairs
					}
					destroy_situation = this
				}
			}
		}
		owner = {
			add_modifier = {
				modifier = mem_ancestors_grudge_lost_forge_butrevenge
			}
		}
	}
}

# normal digsite
#  digiste 1
fleet_event = {
	id = mem_ancestors_grudge.300
	title = mem_ancestors_grudge.300.name
	desc = mem_ancestors_grudge.300.desc
	picture = GFX_evt_laser_grid
	show_sound = event_collapsing_ruins
	#location = target
	archaeology = yes
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.300.a
	}
}

#  digiste 2
fleet_event = {
	id = mem_ancestors_grudge.305
	title = mem_ancestors_grudge.305.name
	desc = mem_ancestors_grudge.305.desc
	picture = GFX_evt_derelict_interior
	show_sound = event_collapsing_ruins
	#location = target
	archaeology = yes
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.305.a
	}
}

#  digiste 3
fleet_event = {
	id = mem_ancestors_grudge.310
	title = mem_ancestors_grudge.310.name
	desc = {
		trigger = {
			owner_main_species = {
				is_archetype = MACHINE
			}
		}
		text = mem_ancestors_grudge.310.desc_robots
	}
	desc = {
		trigger = {
			NOT = {
				owner_main_species = {
					is_archetype = MACHINE
				}
			}
		}
		text = mem_ancestors_grudge.310.desc
	}
	picture = GFX_evt_bone_building
	show_sound = event_collapsing_ruins
	#location = target
	archaeology = yes
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.310.a
	}
}

#  digiste 4
fleet_event = {
	id = mem_ancestors_grudge.315
	title = mem_ancestors_grudge.315.name
	desc = mem_ancestors_grudge.315.desc
	picture = GFX_evt_analyzing_artifacts
	show_sound = event_collapsing_ruins
	#location = target
	archaeology = yes
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.315.a
		owner = {
			add_relic = r_mem_ancestors_grudge_anvil
		}
		hidden_effect = {
			if = {
				limit = {
					owner = {
						NOT = {
							is_variable_set = mem_ancestors_grudge_activated_relics_counter
						}
					}
				}
				owner = {
					set_variable = {
						which = mem_ancestors_grudge_activated_relics_counter
						value = 1
					}
				}
			}
		}
	}
}

# hive digsite
#  digiste 1
fleet_event = {
	id = mem_ancestors_grudge.320
	title = mem_ancestors_grudge.320.name
	desc = mem_ancestors_grudge.320.desc
	picture = GFX_evt_laser_grid
	show_sound = event_collapsing_ruins
	#location = target
	archaeology = yes
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.320.a
	}
}

#  digiste 2
fleet_event = {
	id = mem_ancestors_grudge.325
	title = mem_ancestors_grudge.325.name
	desc = mem_ancestors_grudge.325.desc
	picture = GFX_evt_derelict_interior
	show_sound = event_collapsing_ruins
	#location = target
	archaeology = yes
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.325.a
	}
}

#  digiste 3
fleet_event = {
	id = mem_ancestors_grudge.330
	title = mem_ancestors_grudge.330.name
	desc = mem_ancestors_grudge.330.desc
	picture = GFX_evt_bone_building
	show_sound = event_collapsing_ruins
	#location = target
	archaeology = yes
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.330.a
	}
}

#  digiste 4
fleet_event = {
	id = mem_ancestors_grudge.335
	title = mem_ancestors_grudge.335.name
	desc = mem_ancestors_grudge.335.desc
	picture = GFX_evt_analyzing_artifacts
	show_sound = event_collapsing_ruins
	#location = target
	archaeology = yes
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.335.a
		owner = {
			add_relic = r_mem_ancestors_grudge_modern_art
		}
	}
}

##############################
# inventive runesmith
# inventive artificer
# failed several times and underperformed
# modern art relic
# violated safety regualtiosn
# unwanted fusion
# new materials technique 
# sentient metal
# rival sabotage
situation_event = {
	id = mem_ancestors_grudge.400
	title = "mem_ancestors_grudge.400.title"
	desc = "mem_ancestors_grudge.400.desc"
	picture = GFX_mem_ancestors_grudge_runesmith_in_forge
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.400.a
		owner = {
			add_monthly_resource_mult = {
				resource = alloys
				value = 1
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.400.b
		add_situation_progress = 10
	}
}

situation_event = {
	id = mem_ancestors_grudge.405
	title = "mem_ancestors_grudge.405.title"
	desc = "mem_ancestors_grudge.405.desc"
	picture = GFX_mem_ancestors_grudge_runesmith_in_forge
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.405.a
		owner = {
			if = {
				limit = {
					country_uses_consumer_goods = yes
				}
				add_monthly_resource_mult = {
					resource = consumer_goods
					value = 1
				}
			}
			else = {
				add_monthly_resource_mult = {
					resource = unity
					value = 1
				}
			}
		}
		add_situation_progress = -5
	}
	option = {
		name = mem_ancestors_grudge.405.b
		add_situation_progress = 10
	}
}

situation_event = {
	id = mem_ancestors_grudge.410
	title = "mem_ancestors_grudge.410.title"
	desc = "mem_ancestors_grudge.410.desc"
	picture = GFX_evt_deficit
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	trigger = {
		situation_progress >= 21
		host_has_dlc = "Ancient Relics Story Pack"
	}
	option = {
		name = mem_ancestors_grudge.410.a
		owner = {
			add_monthly_resource_mult = {
				resource = minor_artifacts
				value = 12
			}
		}
		add_situation_progress = -20
	}
}

situation_event = {
	id = mem_ancestors_grudge.415
	title = "mem_ancestors_grudge.415.title"
	desc = "mem_ancestors_grudge.415.desc"
	picture = GFX_evt_civil_action
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	trigger = {
		situation_progress >= 151
		NOT = {
			owner = {
				has_relic = r_mem_ancestors_grudge_modern_art
			}
		}
	}
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.415.a
		owner = {
			add_relic = r_mem_ancestors_grudge_modern_art
		}
		add_situation_progress = -150
	}
	option = {
		name = mem_ancestors_grudge.415.b
		add_situation_progress = -10
		trigger = {
			owner = {
				NOT = {
					has_ethic = ethic_gestalt_consciousness
				}
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.415.c
		trigger = {
			owner = {
				has_authority = auth_machine_intelligence
			}
		}
	}
}

situation_event = {
	id = mem_ancestors_grudge.420
	title = "mem_ancestors_grudge.420.title"
	desc = "mem_ancestors_grudge.420.desc"
	picture = GFX_evt_archaeologists_escaping
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	trigger = {
		situation_progress >= 6
	}
	option = {
		name = mem_ancestors_grudge.420.a
	}
	option = {
		name = mem_ancestors_grudge.420.b		#compensate family
		owner = {
			add_resource = {
				energy = -1
				unity = 1
			}
		}
		allow = {
			owner = {
				NOT = {
					has_ethic = ethic_gestalt_consciousness
				}
			}
		}
	}
	after = {
		target = {
			random_owned_pop = {
				limit = {
					OR = {
						has_job = mem_ancestors_grudge_relicsmith
						has_job = mem_ancestors_grudge_relicsmith_drone
						has_job = mem_ancestors_grudge_runesmith
						has_job = mem_ancestors_grudge_runesmith_drone
					}
				}
				kill_pop = yes
			}
		}
		add_situation_progress = -5
	}
}

situation_event = {
	id = mem_ancestors_grudge.425
	title = "mem_ancestors_grudge.425.title"
	desc = "mem_ancestors_grudge.425.desc"
	picture = GFX_evt_decryption
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.425.a
		owner = {
			add_resource = {
				volatile_motes = 200
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.425.b
		add_situation_progress = 20
	}
	after = {
	}
}

situation_event = {
	id = mem_ancestors_grudge.430
	title = "mem_ancestors_grudge.430.title"
	desc = "mem_ancestors_grudge.430.desc"
	picture = GFX_evt_engineering_bay
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.430.a
		owner = {
			add_random_research_option = {
				category = materials
				#area = RANDOM
				#tier = <int>
				add_progress = 30
				ignore_prereqs = no
				ignore_rare = no
				only_rare = no
				ignore_insight = yes
				fail_effects = {
					add_monthly_resource_mult = {
						resource = engineering_research
						value = 12
					}
				}
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.430.b
		add_situation_progress = 30
	}
}

situation_event = {
	id = mem_ancestors_grudge.435
	title = "mem_ancestors_grudge.435.title"
	desc = "mem_ancestors_grudge.435.desc"
	picture = GFX_evt_gray_goo
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.435.a
		owner = {
			add_resource = {
				nanites = 300
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.435.b
		add_situation_progress = 30
	}
	after = {
		target = {
			add_planet_devastation = 10
		}
	}
}

situation_event = {
	id = mem_ancestors_grudge.440
	title = "mem_ancestors_grudge.440.title"
	desc = "mem_ancestors_grudge.440.desc"
	picture = GFX_evt_ancient_artifact
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	trigger = {
		exists = event_target:mem_ancestors_grudge_rival
		situation_progress >= 21
		owner = {
			num_rivals >= 1
		}
	}
	immediate = {
		owner = {
			random_rival_country = {
				save_event_target_as = mem_ancestors_grudge_rival
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.440.a
	}
	after = {
		owner = {
			add_opinion_modifier = {
				who = event_target:mem_ancestors_grudge_rival
				modifier = opinion_insult
			}
		}
		add_situation_progress = -20
	}
}

situation_event = {
	id = mem_ancestors_grudge.445
	title = "mem_ancestors_grudge.445.title"
	desc = "mem_ancestors_grudge.445.desc"
	picture = GFX_evt_ship_offloading_cargo
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	trigger = {
		owner = {
			NOT = {
				has_country_flag = mem_ancestors_grudge_diggyhole
			}
		}
	}
	immediate = {
		owner = {
			set_country_flag = mem_ancestors_grudge_diggyhole
		}
	}
	option = {
		name = mem_ancestors_grudge.445.a
	}
	option = {
		name = mem_ancestors_grudge.445.b
		custom_tooltip = mem_ancestors_grudge.445.b.tooltip
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value >= 2000
				}
			}
		}
		owner = {
			add_resource = {
				energy = -2000
			}
		}
		hidden_effect = {
			owner = {
				#hidden event decides outcome at the time
				country_event = {
					id = mem_ancestors_grudge.450
					days = 60
					random = 60
				}
			}
		}
	}
	after = {
		owner = {
			add_modifier = {
				modifier = mem_ancestors_grudge_diggy_hole
				days = 720
			}
		}
	}
}

planet_event = {
	id = mem_ancestors_grudge.446
	title = "mem_ancestors_grudge.446.title"
	desc = "mem_ancestors_grudge.446.desc"
	picture = GFX_evt_mining_operations
	show_sound = evn_tox_knights_of_the_toxic_god
	location = root
	is_triggered_only = yes
	option = {
		name = FASCINATING
		if = {
			limit = {
				has_modifier = mineral_rich
			}
			remove_modifier = mineral_rich
		}
		add_modifier = {
			modifier = ultra_rich
		}
	}
}

planet_event = {
	id = mem_ancestors_grudge.447
	title = "mem_ancestors_grudge.447.title"
	desc = "mem_ancestors_grudge.447.desc"
	picture = GFX_evt_in_the_dark
	show_sound = evn_tox_knights_of_the_toxic_god
	location = root
	is_triggered_only = yes
	option = {
		name = EXCELLENT
		locked_random_list = {
			1 = {
				add_deposit = d_crystalline_caverns
				add_deposit = d_crystalline_caverns
			}
			1 = {
				add_deposit = d_dust_caverns
				add_deposit = d_dust_caverns
			}
			1 = {
				#rare deposit, but for energy, might lead to repurpose of planet - interesting choice to make
				add_deposit = d_betharian_deposit
				add_deposit = d_betharian_deposit
			}
		}
	}
}

planet_event = {
	id = mem_ancestors_grudge.448
	title = "mem_ancestors_grudge.448.title"
	desc = "mem_ancestors_grudge.448.desc"
	picture = GFX_evt_generator_powerup
	show_sound = evn_tox_knights_of_the_toxic_god
	location = root
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = FASCINATING
		owner = {
			mem_ancestors_grudge_give_random_archeotech = yes
		}
	}
}

country_event = {
	id = mem_ancestors_grudge.449
	title = "mem_ancestors_grudge.449.title"
	desc = "mem_ancestors_grudge.449.desc"
	picture = GFX_evt_assembly_fight
	show_sound = evn_tox_knights_of_the_toxic_god
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.449.a
		remove_modifier = mem_ancestors_grudge_diggy_hole
	}
}

#hidden event decides outcome and chooses target
country_event = {
	id = mem_ancestors_grudge.450
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = {
				any_owned_planet = {
					has_designation = col_mining
					#we don't want to end up with the edge case of a double modifier, but that one should be exceptionally rare so limiting the selection for the other outcome should have no negative impact
					NOT = {
						has_modifier = ultra_rich
					}
				}
			}
			random_owned_planet = {
				limit = {
					has_designation = col_mining
					NOT = {
						has_modifier = ultra_rich
					}
				}
				save_event_target_as = mem_ancestors_grudge_mining_planet
			}
		}
		else = {
			random_owned_planet = {
				limit = {
					is_artificial = no
					has_district = district_mining
					NOT = {
						has_modifier = ultra_rich
					}
				}
				save_event_target_as = mem_ancestors_grudge_mining_planet
			}
		}
		random_list = {
			25 = {
				modifier = {
					factor = 0
					NOT = {
						exists = event_target:mem_ancestors_grudge_mining_planet
					}
				}
				event_target:mem_ancestors_grudge_mining_planet = {
					planet_event = {
						id = mem_ancestors_grudge.446
					}
				}
			}
			25 = {
				modifier = {
					factor = 0
					NOT = {
						exists = event_target:mem_ancestors_grudge_mining_planet
					}
				}
				event_target:mem_ancestors_grudge_mining_planet = {
					planet_event = {
						id = mem_ancestors_grudge.447
					}
				}
			}
			25 = {
				modifier = {
					factor = 0
					NOT = {
						any_owned_planet = {
							has_planet_flag = mem_ancestors_grudge_planet
						}
					}
				}
				random_owned_planet = {
					limit = {
						has_planet_flag = mem_ancestors_grudge_planet
					}
					planet_event = {
						id = mem_ancestors_grudge.448
					}
				}
			}
			25 = {
				country_event = {
					id = mem_ancestors_grudge.449
				}
			}
		}
	}
}

situation_event = {
	id = mem_ancestors_grudge.455
	title = "mem_ancestors_grudge.455.title"
	desc = "mem_ancestors_grudge.455.desc"
	picture = GFX_evt_announcement
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	trigger = {
		# owner = {
		# 	is_gestalt = no
		# }
		target = {
			NOT = {
				has_modifier = mem_ancestors_grudge_high_expectations
			}
		}
	}
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.455.a
		target = {
			add_modifier = {
				modifier = mem_ancestors_grudge_high_expectations
				days = 1800
			}
		}
		mem_ancestors_grudge_increase_relic_roll_quality = yes
	}
	option = {
		name = mem_ancestors_grudge.455.b
	}
	after = {
	}
}

situation_event = {
	id = mem_ancestors_grudge.460
	title = "mem_ancestors_grudge.460.title"
	desc = "mem_ancestors_grudge.460.desc"
	picture = GFX_evt_asteroid_field
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	trigger = {
	}
	immediate = {
		set_variable = {
			which = situation_progress
			value = this.trigger:situation_progress
		}
		multiply_variable = {
			which = situation_progress
			value = -1
		}
	}
	option = {
		name = mem_ancestors_grudge.460.a
		mem_ancestors_grudge_decrease_relic_roll_quality = yes
	}
	option = {
		name = mem_ancestors_grudge.460.b
		target = {
			add_modifier = {
				modifier = mem_ancestors_grudge_high_purify
				days = 360
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.460.c
		add_situation_progress = this.situation_progress
	}
	after = {
	}
}

situation_event = {
	id = mem_ancestors_grudge.465
	title = "mem_ancestors_grudge.465.title"
	desc = "mem_ancestors_grudge.465.desc"
	picture = GFX_evt_cosmic_storms_hold_the_line
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	trigger = {
	}
	immediate = {
		set_variable = {
			which = situation_progress
			value = this.trigger:situation_progress
		}
		multiply_variable = {
			which = situation_progress
			value = 0.5
		}
		set_variable = {
			which = situation_progress_negative
			value = situation_progress
		}
		multiply_variable = {
			which = situation_progress_negative
			value = -1
		}
	}
	option = {
		name = mem_ancestors_grudge.465.a
		random_list = {
			1 = {
				add_situation_progress = situation_progress
			}
			1 = {
				add_situation_progress = situation_progress_negative
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.465.b
		mem_ancestors_grudge_decrease_relic_roll_quality = yes
	}
	option = {
		name = mem_ancestors_grudge.465.c
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value = 2000
				}
			}
		}
		owner = {
			add_resource = {
				energy = -2000
			}
			add_monthly_resource_mult = {
				resource = physics_research
				value = 3
			}
		}
		add_situation_progress = situation_progress_negative
	}
	after = {
	}
}

situation_event = {
	id = mem_ancestors_grudge.470
	title = "mem_ancestors_grudge.470.title"
	desc = "mem_ancestors_grudge.470.desc"
	picture = GFX_evt_alpine_city
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	trigger = {
		target = {
			NOT = {
				has_modifier = mem_ancestors_grudge_6_day_workweek
			}
		}
	}
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.470.a
		mem_ancestors_grudge_increase_relic_roll_quality = yes
	}
	option = {
		name = mem_ancestors_grudge.470.b
		target = {
			add_modifier = {
				modifier = mem_ancestors_grudge_6_day_workweek
			}
		}
	}
	after = {
	}
}

situation_event = {
	id = mem_ancestors_grudge.475
	title = "mem_ancestors_grudge.475.title"
	desc = "mem_ancestors_grudge.475.desc"
	picture = GFX_evt_resource_cache
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	trigger = {
		target = {
			NOT = {
				has_modifier = mem_ancestors_grudge_more_workload
			}
		}
	}
	immediate = {
		set_variable = {
			which = situation_progress
			value = this.trigger:situation_progress
		}
		multiply_variable = {
			which = situation_progress
			value = 0.5
		}
		set_variable = {
			which = situation_progress_negative
			value = situation_progress
		}
		multiply_variable = {
			which = situation_progress_negative
			value = -1
		}
	}
	option = {
		name = mem_ancestors_grudge.475.a
		target = {
			add_modifier = {
				modifier = mem_ancestors_grudge_more_workload
				days = 1800
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.475.b
		target = {
			mem_ancestors_grudge_increase_jobs_onforge_planet = yes
		}
	}
	option = {
		name = mem_ancestors_grudge.475.c
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = 3
			}
		}
	}
	after = {
	}
}

situation_event = {
	id = mem_ancestors_grudge.480
	title = "mem_ancestors_grudge.480.title"
	desc = "mem_ancestors_grudge.480.desc"
	picture = GFX_evt_archaeologists_escaping
	show_sound = evn_tox_knights_of_the_toxic_god
	location = target
	is_triggered_only = yes
	situation = this
	trigger = {
	}
	immediate = {
		set_variable = {
			which = situation_progress
			value = this.trigger:situation_progress
		}
		multiply_variable = {
			which = situation_progress
			value = 0.5
		}
		set_variable = {
			which = situation_progress_negative
			value = situation_progress
		}
		multiply_variable = {
			which = situation_progress_negative
			value = -1
		}
	}
	option = {
		name = mem_ancestors_grudge.480.a
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = influence
					value = 100
				}
			}
		}
		owner = {
			add_resource = {
				influence = -100
			}
			add_monthly_resource_mult = {
				resource = physics_research
				value = 3
			}
		}
		target = {
			add_planet_devastation = 40
		}
	}
	option = {
		name = mem_ancestors_grudge.480.b
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = energy
					value = 4000
				}
			}
		}
		owner = {
			add_resource = {
				energy = -4000
			}
		}
		target = {
			add_planet_devastation = 10
		}
	}
	option = {
		name = mem_ancestors_grudge.480.c
		target = {
			add_planet_devastation = 40
		}
	}
	after = {
	}
}

### recomended events (above)
# high expectations: encourige (MA upkeep but more quality/ intensity modifier) , dont care 
# poor quality materials: do nothing ( lower quality), purify ( more upkeep), scrap it( reset situation)
# sudden inspiration: experiments ( random slow or speed up), focus ( default speed but lower quality), fund experiemnt (energy cost, physics research, slow down)
# in sync, good day: excellent ( +1 quality), higher! ( +2 quality but insane upkeep), study ( less progress, permanent buff)
# increasing demand: keep up(upkeep and production bonus, timed planet modifier),  train more ( more jobs from forge permanent), assure delivery (unity)
# workfever, dug too dip?, nuclear explosion esh: oberserve ( influence cost,engi research + devastion), deal will it ( energy cost, less devastion), do nothing (  devastion )
starbase_event = {
	id = mem_ancestors_grudge.500
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_starbase_building = voidlure_mem_ancestors_grudge_dragon
	}
	immediate = {
		# we dont lure we hatch
		#create_lured_fauna_country = yes
		# event_target:lured_fauna_country = {
		# 	set_faction_hostility = {
		# 		target = root.owner
		# 		set_hostile = no
		# 	}
		# }
		owner = {
			create_fleet = {
				name = "Dragon Offspring"
				settings = {
					can_upgrade = no
					#can_change_composition = no
					#can_change_leader = no
					uses_naval_capacity = no
					spawn_debris = no
				}
				effect = {
					set_owner = root.owner
					create_ship_design = {
						design = mem_ancestors_grudge_dragonling
					}
					create_ship = {
						design = last_created_design
						name = "NAME_Dragonling"
						prefix = no
						upgradable = no
					}
					set_location = owner.capital_scope
				}
			}
			# last_created_fleet = {
			# 	set_owner = event_target:lured_fauna_country
			# 	set_fleet_flag = voidlure_fleet
			# }
			create_voidlure_capture_message = yes
			set_country_flag = voidlure_attracted_mem_ancestors_grudge_dragon
		}
		starbase_event = {
			id = mem_ancestors_grudge.500
			days = @voidlure_mem_ancestors_grudge_dragon_cd			# this needs to be synced with ...
		}
		set_timed_starbase_flag = {
			flag = capture_cooldown_for_mem_ancestors_grudge_dragon
			days = @voidlure_mem_ancestors_grudge_dragon_cd			# ... this
		}
	}
}

# Relic Acquired (HIDDEN), additional chance for hive
country_event = {
	id = mem_ancestors_grudge.505
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		root = {
			has_origin = origin_mem_ancestors_grudge_hive
		}
		From = {
			is_country_type = default
			num_owned_relics > 0
		}
		FromFrom = {
			is_capital = yes
		}
		any_war = {
			any_attacker = {
				is_same_value = root
			}
			any_defender = {
				is_same_value = from
			}
			NOT = {
				using_war_goal = {
					type = wg_take_galatron
					owner = attacker
				}
			}
		}
	}
	immediate = {
		FromFrom = {
			save_event_target_as = planet
		}
		From = {
			save_event_target_as = victim
		}
		random_list = {
			100 = {
			}
			5 = {
				modifier = {
					factor = 15
					has_valid_civic = civic_barbaric_despoilers
				}
				modifier = {
					factor = 6.67					# 50% chance of success
					any_war = {
						any_attacker = {
							is_same_value = root
						}
						any_defender = {
							is_same_value = from
						}
						using_war_goal = {
							type = wg_plunder
							owner = attacker
						}
					}
				}
				country_event = {
					id = ancrel.6500
				}
			}
		}
	}
}
# on relic acquried
country_event = {
	id = mem_ancestors_grudge.510
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		mem_ancestors_grudge_is_hoarder = yes
	}
	immediate = {
		add_monthly_resource_mult = {
			resource = unity
			value = 12
		}
	}
}
