namespace = mem_ancestors_grudge
###########
# 
# made by:
# tr33
#
###########
############################################################################################################
# Setup Events
############################################################################################################
# mem_aevum.0   	|	Gamestart setup/ allowed check/ 10% he spawns
# mem_aevum.999  	|	hidden setup event for testing use mem_aevum.998 for options
# mem_aevum.998  	|	quick setup / test event / give access to various stuff
namespace = mem_ancestors_grudge
country_event = {
	id = mem_ancestors_grudge.999
	title = WEIRD
	desc = WEIRD
	picture = GFX_evt_ancient_alien_temple
	show_sound = event_collapsing_ruins
	location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	immediate = {
		random_owned_planet = {
			limit = {
				has_planet_flag = mem_ancestors_grudge_planet
			}
			save_event_target_as = mem_ancestors_grudge_planet
		}
	}
	option = {
		name = WEIRD
		event_target:mem_ancestors_grudge_planet = {
			add_building = mem_ancestors_grudge_building_forge_0
		}
	}
	option = {
		name = WEIRD
		start_situation = {
			type = situation_mem_ancestors_grudge_forge_repairs
			target = event_target:mem_ancestors_grudge_planet
		}
		random_situation = {
			limit = {
				is_situation_type = situation_mem_ancestors_grudge_forge_repairs
			}
			add_situation_progress = 20000
		}
	}
	option = {
		name = WEIRD
		start_situation = {
			type = situation_mem_ancestors_grudge_crafting
			target = event_target:mem_ancestors_grudge_planet
		}
		random_situation = {
			limit = {
				is_situation_type = situation_mem_ancestors_grudge_crafting
			}
			add_situation_progress = 20000
		}
	}
	option = {
		name = WEIRD
		add_relic = r_mem_ancestors_grudge_pauldron
		set_country_flag = mem_ancestors_grudge_relic_flag1
		set_country_flag = mem_ancestors_grudge_relic_flag2
		set_country_flag = mem_ancestors_grudge_relic_flag3
		set_country_flag = mem_ancestors_grudge_relic_flag4
		set_country_flag = mem_ancestors_grudge_relic_flag5
		set_country_flag = mem_ancestors_grudge_relic_flag6
		set_country_flag = mem_ancestors_grudge_relic_flag7
		set_country_flag = mem_ancestors_grudge_relic_flag8
		set_country_flag = mem_ancestors_grudge_common
		set_country_flag = mem_ancestors_grudge_exceptional
		set_country_flag = mem_ancestors_grudge_rare
		set_country_flag = mem_ancestors_grudge_epic
		set_variable = {
			which = mem_ancestors_grudge_rune_intensity
			value = 4
		}
	}
	option = {
		name = WEIRD
		add_relic = r_mem_ancestors_grudge_ring
		set_country_flag = mem_ancestors_grudge_relic_flag1
		set_country_flag = mem_ancestors_grudge_relic_flag2
		set_country_flag = mem_ancestors_grudge_relic_flag3
		set_country_flag = mem_ancestors_grudge_relic_flag4
		set_country_flag = mem_ancestors_grudge_relic_flag5
		set_country_flag = mem_ancestors_grudge_relic_flag6
		set_country_flag = mem_ancestors_grudge_relic_flag7
		set_country_flag = mem_ancestors_grudge_relic_flag8
		set_country_flag = mem_ancestors_grudge_common
		set_country_flag = mem_ancestors_grudge_exceptional
		set_country_flag = mem_ancestors_grudge_rare
		set_country_flag = mem_ancestors_grudge_epic
		set_variable = {
			which = mem_ancestors_grudge_rune_intensity
			value = 4
		}
	}
	option = {
		name = WEIRD
		add_relic = r_mem_ancestors_grudge_sword
		set_country_flag = mem_ancestors_grudge_relic_flag1
		set_country_flag = mem_ancestors_grudge_relic_flag2
		set_country_flag = mem_ancestors_grudge_relic_flag3
		set_country_flag = mem_ancestors_grudge_relic_flag4
		set_country_flag = mem_ancestors_grudge_relic_flag5
		set_country_flag = mem_ancestors_grudge_relic_flag6
		set_country_flag = mem_ancestors_grudge_relic_flag7
		set_country_flag = mem_ancestors_grudge_relic_flag8
		set_country_flag = mem_ancestors_grudge_common
		set_country_flag = mem_ancestors_grudge_exceptional
		set_country_flag = mem_ancestors_grudge_rare
		set_country_flag = mem_ancestors_grudge_epic
		set_variable = {
			which = mem_ancestors_grudge_rune_intensity
			value = 4
		}
	}
	option = {
		name = WEIRD
		add_relic = r_mem_ancestors_grudge_anvil
		set_variable = {
			which = mem_ancestors_grudge_activated_relics_counter
			value = 1
		}
	}
	option = {
		name = WEIRD
		add_resource = {
			unity = 1000
			mult = this.modifier:mem_ancestors_grudge_artifact_power_produces_mult
		}
	}
	option = {
		name = WEIRD
		add_resource = {
			unity = 1000
			mult = this.modifier:mem_ancestors_grudge_rune_power_produces_mult
		}
	}
	option = {
		name = WEIRD
		add_resource = {
			unity = 1000
			mult = this.value:mem_ancestors_grudge_situation_rarity
		}
	}
	option = {
		name = WEIRD
		capital_scope = {
			solar_system = {
				spawn_system = {
					initializer = mem_ancestors_grudge_system_lost_colony_1
				}
			}
		}
	}
	option = {
		name = WEIRD
		random_playable_country = {
			save_event_target_as = mem_this
		}
		country_event = {
			id = mem_ancestors_grudge.205
			scopes = {
				from = event_target:mem_this
			}
		}
	}
}

# setup 
# fired at gamestart to setup the habitat
country_event = {
	id = mem_ancestors_grudge.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			has_origin = mem_ancestors_grudge_origin
			has_origin = mem_ancestors_grudge_origin_robots
		}
	}
	immediate = {
		save_event_target_as = mem_ancestors_grudge_origin
		capital_scope = {
			while = {
				count = 6
				random_owned_pop = {
					#save_event_target_as = mem_ancestors_grudge_origin_species
					kill_pop = yes
				}
				#
			}
			# solar_system = {
			# 	random_system_planet = {
			# 		limit = {
			# 			NOT = {
			# 				is_same_value = prevprev
			# 			}
			# 		}
			# 		change_pc = pc_relic
			# 		set_planet_flag = mem_ancestors_grudge_planet
			# 	}
			# }
		}
		random_planet_within_border = {
			limit = {
				has_planet_flag = mem_ancestors_grudge_planet
			}
			start_colony = {
				owner = root
				species = research_station.
				#ethos = root.ethos
			}
			add_colony_progress = 0.8
			# create_colony = {
			# 	owner = root
			# 	species = root.species
			# 	#	ethos = random
			# }
			add_modifier = {
				modifier = mem_ancestors_grudge_city_planet
			}
			add_modifier = {
				modifier = low_gravity
			}
			add_deposit = d_mem_ancestors_grudge_boulder
			while = {
				count = 8
				add_building = mem_ancestors_grudge_building_ruins
				#ruin_building = mem_ancestors_grudge_building_ruins
			}
			while = {
				count = 3
				add_deposit = d_mem_ancestors_grudge_bomb_crater
				add_deposit = d_mem_ancestors_grudge_ruined_district
			}
			while = {
				count = 5
				add_deposit = d_mem_ancestors_grudge_city_ruins
			}
			while = {
				count = 2
				create_pop = {
					species = owner_main_species
				}
			}
		}
		country_event = {
			id = mem_ancestors_grudge.5
			days = 360
		}
		################### create enemy #######################
		create_country = {
			species = random
			name_list = random
			type = default
			origin = "mem_ancestors_grudge_origin_advanced_start"
			#authority = auth_imperial
			ignore_initial_colony_error = yes
			day_zero_contact = no
			randomize_ethos = yes
			ethos = {
				ethic = "ethic_xenophobe"
				ethic = "ethic_militarist"
				ethic = "ethic_fanatic_militarist"
			}
			# government_restrictions = {
			# 	authority = {
			# 		NOR = {
			# 			value = auth_machine_intelligence
			# 			value = auth_hive_mind
			# 		}
			# 	}
			# }
			# civics = {
			# 	civic = civic_barbaric_despoilers
			# 	civic = random
			# }
		}
		last_created_country = {
			add_resource = {
				unity = 10000
				minerals = 20000
				influence = 200
				alloys = 5000
				food = 10000
				consumer_goods = 5000
				energy = 20000
			}
			force_add_civic = civic_barbaric_despoilers
			set_country_flag = mem_ancestors_grudge_system_lost_colony_country
			save_global_event_target_as = mem_ancestors_grudge_system_lost_colony_country
			#save_event_target_as = mem_ancestors_grudge_system_lost_colony_country
		}
		#set_global_flag = mem_ancestors_grudge_system_lost_colony_1
		random_owned_starbase = {
			solar_system = {
				spawn_system = {
					initializer = mem_ancestors_grudge_system_lost_colony_1
					min_jumps = 10
					#min_distance = 20
				}
			}
			last_created_system = {
				every_system_planet = {
					limit = {
						habitable_planet = yes
					}
					create_colony = {
						owner = event_target:mem_ancestors_grudge_system_lost_colony_country
					}
					set_owner = event_target:mem_ancestors_grudge_system_lost_colony_country
				}
			}
		}
	}
}

# found the forge
country_event = {
	id = mem_ancestors_grudge.5
	title = mem_ancestors_grudge.5.name
	desc = mem_ancestors_grudge.5.desc
	picture = GFX_evt_relic_world
	show_sound = event_collapsing_ruins
	location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	immediate = {
		random_owned_planet = {
			limit = {
				has_planet_flag = mem_ancestors_grudge_planet
			}
			save_event_target_as = mem_ancestors_grudge_planet
		}
	}
	option = {
		name = mem_ancestors_grudge.5.a
		start_situation = {
			type = situation_mem_ancestors_grudge_forge_repairs
			target = event_target:mem_ancestors_grudge_planet
		}
		event_target:mem_ancestors_grudge_planet = {
			remove_building = mem_ancestors_grudge_building_ruins
			add_building = mem_ancestors_grudge_building_forge_0
		}
	}
}

# learned to repair it
situation_event = {
	id = mem_ancestors_grudge.10
	title = mem_ancestors_grudge.10.name
	desc = mem_ancestors_grudge.10.desc
	picture = GFX_evt_relic_world_building
	show_sound = event_energy_field
	location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	situation = this
	immediate = {
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mem_ancestors_grudge_planet
				}
				save_event_target_as = mem_ancestors_grudge_planet
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.10.a
		owner = {
			add_research_option = tech_archaeostudies
		}
		hidden_effect = {
			event_target:mem_ancestors_grudge_planet = {
				set_planet_flag = mem_ancestors_grudge_building_forge_1
			}
		}
	}
}

# learned to repair it + how to forge
situation_event = {
	id = mem_ancestors_grudge.15
	title = mem_ancestors_grudge.15.name
	desc = mem_ancestors_grudge.15.desc
	picture = GFX_evt_riftworld_archsite_crater
	show_sound = event_collapsing_ruins
	location = event_target:mem_ancestors_grudge_planet
	situation = this
	is_triggered_only = yes
	immediate = {
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mem_ancestors_grudge_planet
				}
				save_event_target_as = mem_ancestors_grudge_planet
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.15.a
		target = {
			create_archaeological_site = mem_ancestors_grudge_anvil_site
		}
		hidden_effect = {
			event_target:mem_ancestors_grudge_planet = {
				set_planet_flag = mem_ancestors_grudge_building_forge_2
			}
		}
	}
}

#  lets upgrade this even further
situation_event = {
	id = mem_ancestors_grudge.20
	title = mem_ancestors_grudge.20.name
	desc = mem_ancestors_grudge.20.desc
	picture = GFX_evt_city_ruins
	show_sound = event_collapsing_ruins
	location = event_target:mem_ancestors_grudge_planet
	situation = this
	is_triggered_only = yes
	immediate = {
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mem_ancestors_grudge_planet
				}
				save_event_target_as = mem_ancestors_grudge_planet
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.20.a
		# owner = {
		# 	start_situation = {
		# 		type = situation_mem_ancestors_grudge_crafting
		# 	}
		# }
		owner = {
			add_resource = {
				volatile_motes = 50
				exotic_gases = 50
				rare_crystals = 50
			}
		}
		hidden_effect = {
			event_target:mem_ancestors_grudge_planet = {
				set_planet_flag = mem_ancestors_grudge_building_forge_3
			}
		}
	}
}

#  to perfection and beyond
situation_event = {
	id = mem_ancestors_grudge.25
	title = mem_ancestors_grudge.25.name
	desc = mem_ancestors_grudge.25.desc
	picture = GFX_evt_city_planet_2
	show_sound = event_celebration
	location = event_target:mem_ancestors_grudge_planet
	situation = this
	is_triggered_only = yes
	immediate = {
		owner = {
			random_owned_planet = {
				limit = {
					has_planet_flag = mem_ancestors_grudge_planet
				}
				save_event_target_as = mem_ancestors_grudge_planet
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.25.a
		owner = {
			give_technology = {
				tech = tech_repeatable_mem_ancestors_grudge
			}
		}
		hidden_effect = {
			event_target:mem_ancestors_grudge_planet = {
				set_planet_flag = mem_ancestors_grudge_building_forge_4
			}
		}
	}
}

#  we are finished
situation_event = {
	id = mem_ancestors_grudge.26
	title = mem_ancestors_grudge.26.name
	desc = mem_ancestors_grudge.26.desc
	picture = GFX_evt_coronation
	show_sound = event_celebration
	location = target
	situation = this
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.26.a
		target = {
			change_planet_size = 2
		}
		destroy_situation = this
		owner = {
			add_monthly_resource_mult = {
				resource = unity
				value = 12
			}
		}
	}
}

#  rapired something on planet
country_event = {
	id = mem_ancestors_grudge.30
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		random_situation = {
			limit = {
				is_situation_type = situation_mem_ancestors_grudge_forge_repairs
			}
			add_situation_progress = 5
		}
	}
}

#  3.stage ecu restored
planet_event = {
	id = mem_ancestors_grudge.35
	title = mem_ancestors_grudge.35.name
	desc = mem_ancestors_grudge.35.desc
	picture = GFX_evt_city_planet_2
	show_sound = event_cityscape
	location = this
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.35.a
	}
	after = {
		change_pc = pc_city
		hidden_effect = {
			save_deposits = yes
			clear_deposits = yes
			restore_saved_deposits = yes
			set_industrial_focus_flags = yes
			#change_pc = pc_city
			relic_world_conversion_effect = {
				DISTRICT = district_arcology_housing
				VARIABLE = num_housing_districts
			}
			relic_world_conversion_effect = {
				DISTRICT = district_arcology_arms_industry
				VARIABLE = num_industrial_districts
			}
			add_deposit = d_former_relic_world
			set_ecu_industrial_districts_effect = yes
			set_planet_entity = {
				entity = "city_planet_entity"
				graphical_culture = owner
			}
			planet_event = {
				id = action.68
			}
			# owner = {
			# 	country_event = { id = distar.201 } # port for living planet distar.197, triggers in event
			# }
			# planet_event = { id = mega.200 }
			if = {
				limit = {
					OR = {
						is_active_resolution = "resolution_ecology_environmental_control_board"
						is_active_resolution = "resolution_ecology_paradise_initiative"
					}
				}
				owner = {
					set_timed_country_flag = {
						flag = resolution_breached_terraformed
						days = 3600
					}
				}
			}
		}
		remove_modifier = mem_ancestors_grudge_city_planet
		#remove_deposit = d_mem_ancestors_grudge_boulder #i like keeping it
	}
}

# start forging
country_event = {
	id = mem_ancestors_grudge.40
	title = mem_ancestors_grudge.40.name
	desc = mem_ancestors_grudge.40.desc
	picture = GFX_evt_cosmic_storms_calibration
	show_sound = event_finding_loot
	#location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	immediate = {
		random_owned_planet = {
			limit = {
				has_planet_flag = mem_ancestors_grudge_planet
			}
			save_event_target_as = mem_ancestors_grudge_planet
		}
	}
	option = {
		name = mem_ancestors_grudge.40.a
		start_situation = {
			type = situation_mem_ancestors_grudge_crafting
			target = event_target:mem_ancestors_grudge_planet
		}
		# random_situation = {
		# 	limit = {
		# 		is_situation_type = situation_mem_ancestors_grudge_crafting
		# 	}
		# 	add_situation_progress = 20
		# }
	}
}

#  crafted a relics
situation_event = {
	id = mem_ancestors_grudge.50
	title = mem_ancestors_grudge.50.name
	desc = mem_ancestors_grudge.50.desc
	picture = GFX_evt_ancient_artifact
	show_sound = event_finding_loot
	location = target
	situation = this
	is_triggered_only = yes
	immediate = {
		# clear old stuff
		owner = {
			clear_variable = mem_ancestors_grudge_rune_intensity
			remove_country_flag = mem_ancestors_grudge_common
			remove_country_flag = mem_ancestors_grudge_rare
			remove_country_flag = mem_ancestors_grudge_epic
			remove_country_flag = mem_ancestors_grudge_exceptional
			remove_country_flag = mem_ancestors_grudge_relic_flag1
			remove_country_flag = mem_ancestors_grudge_relic_flag2
			remove_country_flag = mem_ancestors_grudge_relic_flag3
			remove_country_flag = mem_ancestors_grudge_relic_flag4
			remove_country_flag = mem_ancestors_grudge_relic_flag5
			remove_country_flag = mem_ancestors_grudge_relic_flag6
			remove_country_flag = mem_ancestors_grudge_relic_flag7
			remove_country_flag = mem_ancestors_grudge_relic_flag8
			# remove_country_flag = mem_ancestors_grudge_sword_flag
			# remove_country_flag = mem_ancestors_grudge_ring_flag
			# remove_country_flag = mem_ancestors_grudge_pauldron_flag
		}
		# roll for relic modifiers
		owner = {
			set_variable = {
				which = mem_ancestors_grudge_rune_intensity
				value = owner.modifier:mem_ancestors_grudge_rune_power_produces_mult
			}
			change_variable = {
				which = mem_ancestors_grudge_rune_intensity
				value = 1
			}
		}
		owner = {
			if = {
				limit = {
					check_variable_arithmetic = {
						which = owner.value:mem_ancestors_grudge_situation_rarity
						value <= 2
					}
				}
				set_country_flag = mem_ancestors_grudge_common
			}
			else_if = {
				limit = {
					check_variable_arithmetic = {
						which = owner.value:mem_ancestors_grudge_situation_rarity
						value <= 3
					}
				}
				set_country_flag = mem_ancestors_grudge_rare
			}
			else_if = {
				limit = {
					check_variable_arithmetic = {
						which = owner.value:mem_ancestors_grudge_situation_rarity
						value <= 4
					}
				}
				set_country_flag = mem_ancestors_grudge_epic
			}
			else_if = {
				limit = {
					check_variable_arithmetic = {
						which = owner.value:mem_ancestors_grudge_situation_rarity
						value <= 5
					}
				}
				set_country_flag = mem_ancestors_grudge_exceptional
			}
		}
		# at leasst on emodifer should be gainabale
		owner = {
			random_list = {
				1 = {
					set_country_flag = mem_ancestors_grudge_relic_flag1
					modifier = {
						has_country_flag = mem_ancestors_grudge_relic_flag1
						factor = 0
					}
				}
				1 = {
					set_country_flag = mem_ancestors_grudge_relic_flag2
					modifier = {
						has_country_flag = mem_ancestors_grudge_relic_flag2
						factor = 0
					}
				}
				1 = {
					set_country_flag = mem_ancestors_grudge_relic_flag3
					modifier = {
						has_country_flag = mem_ancestors_grudge_relic_flag3
						factor = 0
					}
				}
				1 = {
					set_country_flag = mem_ancestors_grudge_relic_flag4
					modifier = {
						has_country_flag = mem_ancestors_grudge_relic_flag4
						factor = 0
					}
				}
				1 = {
					set_country_flag = mem_ancestors_grudge_relic_flag5
					modifier = {
						has_country_flag = mem_ancestors_grudge_relic_flag5
						factor = 0
					}
				}
				1 = {
					set_country_flag = mem_ancestors_grudge_relic_flag6
					modifier = {
						has_country_flag = mem_ancestors_grudge_relic_flag6
						factor = 0
					}
				}
				1 = {
					set_country_flag = mem_ancestors_grudge_relic_flag7
					modifier = {
						has_country_flag = mem_ancestors_grudge_relic_flag7
						factor = 0
					}
				}
				1 = {
					set_country_flag = mem_ancestors_grudge_relic_flag8
					modifier = {
						has_country_flag = mem_ancestors_grudge_relic_flag8
						factor = 0
					}
				}
			}
		}
		while = {
			count = owner.value:mem_ancestors_grudge_situation_rarity
			owner = {
				random_list = {
					1 = {
						set_country_flag = mem_ancestors_grudge_relic_flag1
						modifier = {
							has_country_flag = mem_ancestors_grudge_relic_flag1
							factor = 0
						}
					}
					1 = {
						set_country_flag = mem_ancestors_grudge_relic_flag2
						modifier = {
							has_country_flag = mem_ancestors_grudge_relic_flag2
							factor = 0
						}
					}
					1 = {
						set_country_flag = mem_ancestors_grudge_relic_flag3
						modifier = {
							has_country_flag = mem_ancestors_grudge_relic_flag3
							factor = 0
						}
					}
					1 = {
						set_country_flag = mem_ancestors_grudge_relic_flag4
						modifier = {
							has_country_flag = mem_ancestors_grudge_relic_flag4
							factor = 0
						}
					}
					1 = {
						set_country_flag = mem_ancestors_grudge_relic_flag5
						modifier = {
							has_country_flag = mem_ancestors_grudge_relic_flag5
							factor = 0
						}
					}
					1 = {
						set_country_flag = mem_ancestors_grudge_relic_flag6
						modifier = {
							has_country_flag = mem_ancestors_grudge_relic_flag6
							factor = 0
						}
					}
					1 = {
						set_country_flag = mem_ancestors_grudge_relic_flag7
						modifier = {
							has_country_flag = mem_ancestors_grudge_relic_flag7
							factor = 0
						}
					}
					1 = {
						set_country_flag = mem_ancestors_grudge_relic_flag8
						modifier = {
							has_country_flag = mem_ancestors_grudge_relic_flag8
							factor = 0
						}
					}
				}
			}
		}
		# roll for relic
		owner = {
			random_list = {
				100 = {
					set_country_flag = mem_ancestors_grudge_sword_flag
				}
				100 = {
					set_country_flag = mem_ancestors_grudge_ring_flag
				}
				100 = {
					set_country_flag = mem_ancestors_grudge_pauldron_flag
				}
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.50.a
		destroy_situation = this
		owner = {
			if = {
				limit = {
					has_country_flag = mem_ancestors_grudge_sword_flag
				}
				add_relic = r_mem_ancestors_grudge_sword
			}
			else_if = {
				limit = {
					has_country_flag = mem_ancestors_grudge_ring_flag
				}
				add_relic = r_mem_ancestors_grudge_ring
			}
			else_if = {
				limit = {
					has_country_flag = mem_ancestors_grudge_pauldron_flag
				}
				add_relic = r_mem_ancestors_grudge_pauldron
			}
		}
	}
	# option = {
	# 	name = mem_ancestors_grudge.50.b
	# }
	after = {
		owner = {
			if = {
				limit = {
					has_modifier = relic_activation_cooldown
				}
				remove_modifier = relic_activation_cooldown
			}
		}
		hidden_effect = {
			owner = {
				remove_country_flag = mem_ancestors_grudge_sword_flag
				remove_country_flag = mem_ancestors_grudge_pauldron_flag
				remove_country_flag = mem_ancestors_grudge_ring_flag
			}
		}
	}
}

# actiavted a relic
country_event = {
	id = mem_ancestors_grudge.45
	title = mem_ancestors_grudge.45.name
	desc = mem_ancestors_grudge.45.desc
	picture = GFX_evt_knights
	show_sound = evn_tox_knights_of_the_toxic_god
	#location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	immediate = {
		random_owned_planet = {
			limit = {
				has_planet_flag = mem_ancestors_grudge_planet
			}
			save_event_target_as = mem_ancestors_grudge_planet
		}
		change_variable = {
			which = mem_ancestors_grudge_activated_relics_counter
			value = 1
		}
		# i hate this
		if = {
			limit = {
				has_relic = r_mem_ancestors_grudge_pauldron
			}
			random_owned_leader = {
				limit = {
					leader_class = official
					NOT = {
						has_trait = mem_ancestors_grudge_trait_relicowner
					}
				}
				save_global_event_target_as  = leader_1
			}
			if = {
				limit = {
					exists = event_target:leader_1
				}
				random_owned_leader = {
					limit = {
						leader_class = official
						NOR = {
							is_same_value = event_target:leader_1
							has_trait = mem_ancestors_grudge_trait_relicowner
						}
					}
					save_global_event_target_as  = leader_2
				}
			}
			if = {
				limit = {
					exists = event_target:leader_2
				}
				random_owned_leader = {
					limit = {
						leader_class = official
						NOR = {
							is_same_value = event_target:leader_1
							is_same_value = event_target:leader_2
							has_trait = mem_ancestors_grudge_trait_relicowner
						}
					}
					save_global_event_target_as  = leader_3
				}
			}
		}
		else_if = {
			limit = {
				has_relic = r_mem_ancestors_grudge_sword
			}
			random_owned_leader = {
				limit = {
					leader_class = commander
					NOT = {
						has_trait = mem_ancestors_grudge_trait_relicowner
					}
				}
				save_global_event_target_as  = leader_1
			}
			if = {
				limit = {
					exists = event_target:leader_1
				}
				random_owned_leader = {
					limit = {
						leader_class = commander
						NOR = {
							is_same_value = event_target:leader_1
							has_trait = mem_ancestors_grudge_trait_relicowner
						}
					}
					save_global_event_target_as  = leader_2
				}
			}
			if = {
				limit = {
					exists = event_target:leader_2
				}
				random_owned_leader = {
					limit = {
						leader_class = commander
						NOR = {
							is_same_value = event_target:leader_1
							is_same_value = event_target:leader_2
							has_trait = mem_ancestors_grudge_trait_relicowner
						}
					}
					save_global_event_target_as  = leader_3
				}
			}
		}
		else_if = {
			limit = {
				has_relic = r_mem_ancestors_grudge_ring
			}
			random_owned_leader = {
				limit = {
					leader_class = commander
					NOT = {
						has_trait = mem_ancestors_grudge_trait_relicowner
					}
				}
				save_global_event_target_as  = leader_1
			}
			if = {
				limit = {
					exists = event_target:leader_1
				}
				random_owned_leader = {
					limit = {
						leader_class = commander
						NOT = {
							is_same_value = event_target:leader_1
						}
						NOT = {
							has_trait = mem_ancestors_grudge_trait_relicowner
						}
					}
					save_global_event_target_as  = leader_2
				}
			}
			if = {
				limit = {
					exists = event_target:leader_2
				}
				random_owned_leader = {
					limit = {
						leader_class = commander
						NOR = {
							is_same_value = event_target:leader_1
							is_same_value = event_target:leader_2
						}
						NOT = {
							has_trait = mem_ancestors_grudge_trait_relicowner
						}
					}
					save_global_event_target_as  = leader_3
				}
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.45.a
		trigger = {
			exists = event_target:leader_1
		}
		event_target:leader_1 = {
			mem_ancestors_grudge_trait_effect = yes
		}
	}
	option = {
		name = mem_ancestors_grudge.45.b
		trigger = {
			exists = event_target:leader_2
		}
		event_target:leader_2 = {
			mem_ancestors_grudge_trait_effect = yes
		}
	}
	option = {
		name = mem_ancestors_grudge.45.c
		trigger = {
			exists = event_target:leader_3
		}
		event_target:leader_3 = {
			mem_ancestors_grudge_trait_effect = yes
		}
	}
	option = {
		name = mem_ancestors_grudge.45.d
		add_resource = {
			minor_artifacts = 1000
			mult = owner.mem_ancestors_grudge_rune_intensity
		}
	}
	# option = {
	# 	name = mem_ancestors_grudge.45.e
	# }
	after = {
		mem_ancestors_grudge_remove_all_relics = yes
		start_situation = {
			type = situation_mem_ancestors_grudge_crafting
			target = event_target:mem_ancestors_grudge_planet
		}
	}
}

# we found our enemy
# Executed right after country has established communications with another country. Always fires, even if comms are established with establish_communications_no_message
# This = Country which established the communications
# From = Country which communications were established with
country_event = {
	id = mem_ancestors_grudge.55
	title = mem_ancestors_grudge.55.name
	desc = mem_ancestors_grudge.55.desc
	picture = GFX_evt_crisis_declared
	show_sound = event_dangerous_animals
	location = from.capital_star
	is_triggered_only = yes
	trigger = {
		OR = {
			AND = {
				is_mem_runesmith = yes
				from = {
					has_origin = mem_ancestors_grudge_origin_advanced_start
				}
			}
			AND = {
				from = {
					is_mem_runesmith = yes
				}
				has_origin = mem_ancestors_grudge_origin_advanced_start
			}
		}
	}
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.55.a
		# communcation is not triggered for both countries so we just proc it for both
		if = {
			limit = {
				has_origin = mem_ancestors_grudge_origin_advanced_start
			}
			from = {
				country_event = {
					id = mem_ancestors_grudge.55
					scopes = {
						from = root
					}
				}
			}
		}
		else = {
			begin_event_chain = {
				event_chain = mem_ancestors_grudge_revenge_arc
			}
		}
	}
}

# we killed them, hidden
#This = destroyed country
#From = optional, destroyer (country)
country_event = {
	id = mem_ancestors_grudge.60
	hide_window = yes
	#location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	trigger = {
		AND = {
			has_origin = mem_ancestors_grudge_origin_advanced_start
			from = {
				is_mem_runesmith = yes
			}
		}
	}
	immediate = {
		from = {
			country_event = {
				id = mem_ancestors_grudge.75
			}
		}
	}
}

# we killed them, notify
country_event = {
	id = mem_ancestors_grudge.75
	title = mem_ancestors_grudge.75.name
	desc = mem_ancestors_grudge.75.desc
	picture = GFX_evt_crisis_defeated
	show_sound = event_space_battle
	#location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	# trigger = {
	# 	AND = {
	# 		has_origin = mem_ancestors_grudge_origin_advanced_start
	# 		from = {
	# 			is_mem_runesmith = yes
	# 		}
	# 	}
	# }
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.75.a
		add_modifier = {
			modifier = mem_ancestors_grudge_lost_forge_beat_sworn_enemy
		}
	}
	option = {
		name = mem_ancestors_grudge.75.b
		add_monthly_resource_mult = {
			resource = unity
			value = 24
		}
		add_resource = {
			influence = 500
		}
	}
	after = {
		end_event_chain = mem_ancestors_grudge_revenge_arc
	}
}

# others killed them
#This = destroyed country
#From = optional, destroyer (country)
country_event = {
	id = mem_ancestors_grudge.65
	is_triggered_only = yes
	trigger = {
		AND = {
			has_origin = mem_ancestors_grudge_origin_advanced_start
			NOT = {
				from = {
					is_mem_runesmith = yes
				}
			}
		}
	}
	immediate = {
		every_playable_country = {
			limit = {
				is_mem_runesmith = yes
				has_communications = root
			}
			country_event = {
				id = mem_ancestors_grudge.70
				scopes = {
					from = from
					fromfrom = root
				}
			}
		}
	}
}

# others  killed them notify
country_event = {
	id = mem_ancestors_grudge.70
	title = mem_ancestors_grudge.70.name
	desc = mem_ancestors_grudge.70.desc
	picture = GFX_evt_crisis_defeated
	show_sound = event_space_battle
	#location = event_target:mem_ancestors_grudge_planet
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.70.a
		end_event_chain = mem_ancestors_grudge_revenge_arc
	}
}

# (Mutated Creatures)
situation_event = {
	id = mem_ancestors_grudge.100
	title = "mem_ancestors_grudge.100.title"
	desc = "mem_ancestors_grudge.100.desc"
	picture = GFX_evt_ground_combat
	show_sound = event_ground_battle
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
		target = {
			create_country = {
				name = "NAME_Deformed_Creatures"
				type = faction
				effect = {
					establish_communications_no_message = root.owner
				}
			}
			while = {
				count = 2
				create_army = {
					name = "NAME_Deformed_Creatures"
					owner = last_created_country
					type = "mutant_army"
				}
				create_army = {
					name = "NAME_Twisted_Beasts"
					owner = last_created_country
					type = "mutant_army"
				}
				create_army = {
					name = "NAME_Mutated_Horrors"
					owner = last_created_country
					type = "mutant_army"
				}
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.100.a
		custom_tooltip = terraforming_mutants_attack
		add_situation_progress = 10
	}
}

# random tech
situation_event = {
	id = mem_ancestors_grudge.105
	title = "mem_ancestors_grudge.105.title"
	desc = "mem_ancestors_grudge.105.desc"
	picture = GFX_evt_obelisk_tourists
	show_sound = event_activating_unknown_technology
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.105.a
		owner = {
			mem_ancestors_grudge_give_random_archeotech = yes
		}
	}
	option = {
		name = mem_ancestors_grudge.105.b
		add_situation_progress = 20
	}
	option = {
		name = mem_ancestors_grudge.105.c
		owner = {
			add_monthly_resource_mult = {
				resource = society_research
				value = 3
			}
		}
	}
}

# add shield gen
situation_event = {
	id = mem_ancestors_grudge.110
	title = "mem_ancestors_grudge.110.title"
	desc = "mem_ancestors_grudge.110.desc"
	picture = GFX_evt_obelisk_tourists
	show_sound = event_activating_unknown_technology
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	trigger = {
		target = {
			NOT = {
				has_building = building_planetary_shield_generator
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.110.a
		target = {
			if = {
				limit = {
					has_building = mem_ancestors_grudge_building_ruins
				}
				remove_building = mem_ancestors_grudge_building_ruins
			}
			add_building = building_planetary_shield_generator
			ruin_building = building_planetary_shield_generator
		}
	}
	option = {
		name = mem_ancestors_grudge.110.b
		owner = {
			add_research_option = tech_planetary_shield_generator
		}
	}
}

# stasis pod
situation_event = {
	id = mem_ancestors_grudge.115
	title = "mem_ancestors_grudge.115.title"
	desc = "mem_ancestors_grudge.115.desc"
	picture = GFX_evt_clones
	show_sound = event_ancient_drone
	location = target
	is_triggered_only = yes
	situation = this
	immediate = {
	}
	# trigger = {
	# 	target = {
	# 		NOT = {
	# 			has_building = building_planetary_shield_generator
	# 		}
	# 	}
	# }
	option = {
		name = mem_ancestors_grudge.115.a
		allow = {
			owner = {
				resource_stockpile_compare = {
					resource = influence
					value >= 20
				}
			}
		}
		target = {
			add_deposit = d_mem_ancestors_grudge_ruined_stasis
		}
		owner = {
			add_resource = {
				influence = -20
			}
		}
	}
	option = {
		name = mem_ancestors_grudge.115.b
		add_situation_progress = 10
	}
}

#  someone else got forge
planet_event = {
	id = mem_ancestors_grudge.200
	hide_window = yes
	#show_sound = event_collapsing_ruins
	location = this
	is_triggered_only = yes
	trigger = {
		has_planet_flag = mem_ancestors_grudge_planet
		owner = {
			is_mem_runesmith = no
		}
		has_mem_relicforge = yes
	}
	immediate = {
		# owner = {
		# 	save_event_target_as = mem_ancestors_grudge_revengetarget
		# }
		every_playable_country = {
			limit = {
				is_mem_runesmith = yes
			}
			country_event = {
				id = mem_ancestors_grudge.205
				scopes = {
					from = root.owner
				}
			}
		}
	}
}

# notify runesmiths
country_event = {
	id = mem_ancestors_grudge.205
	title = mem_ancestors_grudge.205.name
	desc = mem_ancestors_grudge.205.desc
	picture = GFX_evt_crisis_declared
	show_sound = event_ship_bridge
	is_triggered_only = yes
	option = {
		name = mem_ancestors_grudge.205.a		# they have wronged us !
		if = {
			limit = {
				AND = {
					exists = from
					NOT = {
						is_at_war_with = from
					}
				}
			}
			declare_war = {
				target = from
				attacker_war_goal = wg_wipe_them_out
			}
		}
		add_modifier = {
			modifier = mem_ancestors_grudge_lost_forge_butrevenge
		}
	}
	option = {
		name = mem_ancestors_grudge.205.b		# its ok 
		add_modifier = {
			modifier = mem_ancestors_grudge_lost_forge
		}
	}
}

#  you got it back
planet_event = {
	id = mem_ancestors_grudge.210
	hide_window = yes
	#show_sound = event_collapsing_ruins
	#location = this
	is_triggered_only = yes
	trigger = {
		has_planet_flag = mem_ancestors_grudge_planet
		owner = {
			is_mem_runesmith = yes
			OR = {
				has_modifier = mem_ancestors_grudge_lost_forge
				has_modifier = mem_ancestors_grudge_lost_forge_butrevenge
			}
		}
		has_mem_relicforge = yes
	}
	immediate = {
		owner = {
			country_event = {
				id = mem_ancestors_grudge.215
			}
		}
	}
}

country_event = {
	id = mem_ancestors_grudge.215
	title = mem_ancestors_grudge.215.name
	desc = mem_ancestors_grudge.215.desc
	picture = GFX_evt_crisis_defeated
	show_sound = event_announcement
	is_triggered_only = yes
	option = {
		name = mem_ancestors_grudge.215.a		# we got it back
		if = {
			limit = {
				has_modifier = mem_ancestors_grudge_lost_forge
			}
			remove_modifier = mem_ancestors_grudge_lost_forge
		}
		else = {
			remove_modifier = mem_ancestors_grudge_lost_forge_butrevenge
		}
	}
}

#  digiste 1
fleet_event = {
	id = mem_ancestors_grudge.300
	title = mem_ancestors_grudge.300.name
	desc = mem_ancestors_grudge.300.desc
	picture = GFX_evt_laser_grid
	show_sound = event_collapsing_ruins
	#location = target
	archaeology = yes
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.300.a
	}
}

#  digiste 2
fleet_event = {
	id = mem_ancestors_grudge.305
	title = mem_ancestors_grudge.305.name
	desc = mem_ancestors_grudge.305.desc
	picture = GFX_evt_derelict_interior
	show_sound = event_collapsing_ruins
	#location = target
	archaeology = yes
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.305.a
	}
}

#  digiste 3
fleet_event = {
	id = mem_ancestors_grudge.310
	title = mem_ancestors_grudge.310.name
	desc = mem_ancestors_grudge.310.desc
	picture = GFX_evt_bone_building
	show_sound = event_collapsing_ruins
	#location = target
	archaeology = yes
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.310.a
	}
}

#  digiste 4
fleet_event = {
	id = mem_ancestors_grudge.315
	title = mem_ancestors_grudge.315.name
	desc = mem_ancestors_grudge.315.desc
	picture = GFX_evt_analyzing_artifacts
	show_sound = event_collapsing_ruins
	#location = target
	archaeology = yes
	is_triggered_only = yes
	immediate = {
	}
	option = {
		name = mem_ancestors_grudge.315.a
		owner = {
			add_relic = r_mem_ancestors_grudge_anvil
		}
		hidden_effect = {
			if = {
				limit = {
					owner = {
						is_variable_set = mem_ancestors_grudge_activated_relics_counter
					}
				}
			}
			else = {
				owner = {
					set_variable = {
						which = mem_ancestors_grudge_activated_relics_counter
						value = 1
					}
				}
			}
		}
	}
}
